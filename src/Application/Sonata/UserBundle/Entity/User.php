<?php

/**
 * This file is part of the <name> project.
 *
 * (c) <yourname> <youremail>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace Application\Sonata\UserBundle\Entity;

use Sonata\UserBundle\Entity\BaseUser as BaseUser;
use Doctrine\ORM\Mapping as ORM;

/**
 * This file has been generated by the Sonata EasyExtends bundle.
 *
 * @link https://sonata-project.org/bundles/easy-extends
 *
 * References :
 *   working with object : http://www.doctrine-project.org/projects/orm/2.0/docs/reference/working-with-objects/en
 *
 * @author <yourname> <youremail>
 */

/**
 * @ORM\Table(name="fos_user_user")
 * @ORM\Entity()
 */
class User extends BaseUser
{
    /**
     *
     * @var integer
     *
     * @ORM\Column(name="id", type="integer")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    protected $id;

    /**
     *
     * @var string
     *
     * @ORM\Column()
     */
    protected $name;

    /**
     *
     * @var string
     *
     * @ORM\Column()
     */
    protected $company;

    /**
     *
     * @var string
     *
     * @ORM\Column(nullable=true)
     */
    protected $logo;

    /**
     *
     * @var integer
     *
     * @ORM\Column(name="employees", type="integer", nullable=true, options={"default":0})
     */
    protected $noEmployees;

    /**
     *
     * @var string
     *
     * @ORM\Column(nullable=true)
     */
    protected $bank;

    /**
     *
     * @var string
     *
     * @ORM\Column(nullable=true)
     */
    protected $iban;

    /**
     *
     * @var string
     *
     * @ORM\Column(nullable=true)
     */
    protected $cui;

    /**
     *
     * @var string
     *
     * @ORM\Column(nullable=true)
     */
    protected $noRegistrationORC;

    /**
     *
     * @var string
     *
     * @ORM\Column(nullable=true)
     */
    protected $noCertifiedEmpowerment;

    /**
     *
     * @var string
     *
     * @ORM\Column(nullable=true)
     */
    protected $county;

    /**
     *
     * @var string
     *
     * @ORM\Column(nullable=true)
     */
    protected $city;

    /**
     *
     * @var string
     *
     * @ORM\Column(nullable=true)
     */
    protected $address;

    /**
     *
     * @var integer
     *
     * @ORM\Column(type="integer", nullable=true)
     */
    protected $function;

    /**
     *
     * @var integer
     *
     * @ORM\Column(type="integer", nullable=true, options={"default":0})
     */
    protected $credits;

    /**
     * @ORM\OneToMany(targetEntity="\AppBundle\Entity\UserSubscription", mappedBy="user", cascade={"persist", "remove"}, orphanRemoval=true)
     */
    protected $userSubscriptions;

    /**
     * @ORM\OneToMany(targetEntity="\AppBundle\Entity\UserSubscription", mappedBy="approvedBy", cascade={"persist", "remove"}, orphanRemoval=true)
     */
    protected $approvedSubscriptions;

    /**
     *
     * @ORM\OneToMany(targetEntity="\AppBundle\Entity\UserSubscriptionDomain", mappedBy="user", cascade={"persist", "remove"}, orphanRemoval=true)
     */
    protected $userSubscriptionDomains;

    /**
     *
     * @ORM\OneToMany(targetEntity="\AppBundle\Entity\Credits", mappedBy="user", cascade={"persist", "remove"}, orphanRemoval=true)
     */
    protected $userCredits;

    /**
     *
     * @ORM\OneToMany(targetEntity="\AppBundle\Entity\CreditsUsage", mappedBy="user", cascade={"persist", "remove"}, orphanRemoval=true)
     */
    protected $userCreditsUsage;

    /**
     * Get id
     *
     * @return int $id
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set name
     *
     * @param string $name
     * @return User
     */
    public function setName($name)
    {
        $this->name = $name;

        return $this;
    }

    /**
     * Get name
     *
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Set company
     *
     * @param string $company
     * @return User
     */
    public function setCompany($company)
    {
        $this->company = $company;

        return $this;
    }

    /**
     * Get company
     *
     * @return string
     */
    public function getCompany()
    {
        return $this->company;
    }

    /**
     * Set logo
     *
     * @param string $logo
     * @return User
     */
    public function setLogo($logo)
    {
        $this->logo = $logo;

        return $this;
    }

    /**
     * Get logo
     *
     * @return string
     */
    public function getLogo()
    {
        return $this->logo;
    }

    /**
     * Set noEmployees
     *
     * @param integer $noEmployees
     * @return User
     */
    public function setNoEmployees($noEmployees)
    {
        $this->noEmployees = $noEmployees;

        return $this;
    }

    /**
     * Get noEmployees
     *
     * @return integer
     */
    public function getNoEmployees()
    {
        return $this->noEmployees;
    }

    /**
     * Set bank
     *
     * @param string $bank
     * @return User
     */
    public function setBank($bank)
    {
        $this->bank = $bank;

        return $this;
    }

    /**
     * Get bank
     *
     * @return string
     */
    public function getBank()
    {
        return $this->bank;
    }

    /**
     * Set iban
     *
     * @param string $iban
     * @return User
     */
    public function setIban($iban)
    {
        $this->iban = $iban;

        return $this;
    }

    /**
     * Get iban
     *
     * @return string
     */
    public function getIban()
    {
        return $this->iban;
    }


    /**
     * Set cui
     *
     * @param string $cui
     * @return User
     */
    public function setCui($cui)
    {
        $this->cui = $cui;

        return $this;
    }

    /**
     * Get cui
     *
     * @return string
     */
    public function getCui()
    {
        return $this->cui;
    }

    /**
     * Set noRegistrationORC
     *
     * @param string $noRegistrationORC
     * @return User
     */
    public function setNoRegistrationORC($noRegistrationORC)
    {
        $this->noRegistrationORC = $noRegistrationORC;

        return $this;
    }

    /**
     * Get noRegistrationORC
     *
     * @return string
     */
    public function getNoRegistrationORC()
    {
        return $this->noRegistrationORC;
    }

    /**
     * Set noCertifiedEmpowerment
     *
     * @param string $noCertifiedEmpowerment
     * @return User
     */
    public function setNoCertifiedEmpowerment($noCertifiedEmpowerment)
    {
        $this->noCertifiedEmpowerment = $noCertifiedEmpowerment;

        return $this;
    }

    /**
     * Get noCertifiedEmpowerment
     *
     * @return string
     */
    public function getNoCertifiedEmpowerment()
    {
        return $this->noCertifiedEmpowerment;
    }

    /**
     * Set county
     *
     * @param string $county
     * @return User
     */
    public function setCounty($county)
    {
        $this->county = $county;

        return $this;
    }

    /**
     * Get county
     *
     * @return string
     */
    public function getCounty()
    {
        return $this->county;
    }

    /**
     * Set city
     *
     * @param string $city
     * @return User
     */
    public function setCity($city)
    {
        $this->city = $city;

        return $this;
    }

    /**
     * Get city
     *
     * @return string
     */
    public function getCity()
    {
        return $this->city;
    }

    /**
     * Set address
     *
     * @param string $address
     * @return User
     */
    public function setAddress($address)
    {
        $this->address = $address;

        return $this;
    }

    /**
     * Get address
     *
     * @return string
     */
    public function getAddress()
    {
        return $this->address;
    }

    /**
     * Set function
     *
     * @param integer $function
     * @return User
     */
    public function setFunction($function)
    {
        $this->function = $function;

        return $this;
    }

    /**
     * Get function
     *
     * @return integer
     */
    public function getFunction()
    {
        return $this->function;
    }

    /**
     * Set credits
     *
     * @param integer $credits
     * @return User
     */
    public function setCredits($credits)
    {
        $this->credits = $credits;

        return $this;
    }

    /**
     * Get credits
     *
     * @return integer
     */
    public function getCredits()
    {
        return $this->credits;
    }

    /**
     * Add userSubscriptions
     *
     * @param \AppBundle\Entity\UserSubscription $userSubscriptions
     * @return User
     */
    public function addUserSubscription(\AppBundle\Entity\UserSubscription $userSubscriptions)
    {
        $this->userSubscriptions[] = $userSubscriptions;

        return $this;
    }

    /**
     * Remove userSubscriptions
     *
     * @param \AppBundle\Entity\UserSubscription $userSubscriptions
     */
    public function removeUserSubscription(\AppBundle\Entity\UserSubscription $userSubscriptions)
    {
        $this->userSubscriptions->removeElement($userSubscriptions);
    }

    /**
     * Get userSubscriptions
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getUserSubscriptions()
    {
        return $this->userSubscriptions;
    }

    /**
     * Add approvedSubscriptions
     *
     * @param \AppBundle\Entity\UserSubscription $approvedSubscriptions
     * @return User
     */
    public function addApprovedSubscription(\AppBundle\Entity\UserSubscription $approvedSubscriptions)
    {
        $this->approvedSubscriptions[] = $approvedSubscriptions;

        return $this;
    }

    /**
     * Remove approvedSubscriptions
     *
     * @param \AppBundle\Entity\UserSubscription $approvedSubscriptions
     */
    public function removeApprovedSubscription(\AppBundle\Entity\UserSubscription $approvedSubscriptions)
    {
        $this->approvedSubscriptions->removeElement($approvedSubscriptions);
    }

    /**
     * Get approvedSubscriptions
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getApprovedSubscriptions()
    {
        return $this->approvedSubscriptions;
    }

    /**
     * Add userSubscriptionDomains
     *
     * @param \AppBundle\Entity\UserSubscriptionDomain $userSubscriptionDomains
     * @return User
     */
    public function addUserSubscriptionDomain(\AppBundle\Entity\UserSubscriptionDomain $userSubscriptionDomains)
    {
        $this->userSubscriptionDomains[] = $userSubscriptionDomains;

        return $this;
    }

    /**
     * Remove userSubscriptionDomains
     *
     * @param \AppBundle\Entity\UserSubscriptionDomain $userSubscriptionDomains
     */
    public function removeUserSubscriptionDomain(\AppBundle\Entity\UserSubscriptionDomain $userSubscriptionDomains)
    {
        $this->userSubscriptionDomains->removeElement($userSubscriptionDomains);
    }

    /**
     * Get userSubscriptionDomains
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getUserSubscriptionDomains()
    {
        return $this->userSubscriptionDomains;
    }

    /**
     * Add userCredits
     *
     * @param \AppBundle\Entity\Credits $userCredits
     * @return User
     */
    public function addUserCredit(\AppBundle\Entity\Credits $userCredits)
    {
        $this->userCredits[] = $userCredits;

        return $this;
    }

    /**
     * Remove userCredits
     *
     * @param \AppBundle\Entity\Credits $userCredits
     */
    public function removeUserCredit(\AppBundle\Entity\Credits $userCredits)
    {
        $this->userCredits->removeElement($userCredits);
    }

    /**
     * Get userCredits
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getUserCredits()
    {
        return $this->userCredits;
    }

    /**
     * Add userCreditsUsage
     *
     * @param \AppBundle\Entity\CreditsUsage $userCreditsUsage
     * @return User
     */
    public function addUserCreditsUsage(\AppBundle\Entity\CreditsUsage $userCreditsUsage)
    {
        $this->userCreditsUsage[] = $userCreditsUsage;

        return $this;
    }

    /**
     * Remove userCreditsUsage
     *
     * @param \AppBundle\Entity\CreditsUsage $userCreditsUsage
     */
    public function removeUserCreditsUsage(\AppBundle\Entity\CreditsUsage $userCreditsUsage)
    {
        $this->userCreditsUsage->removeElement($userCreditsUsage);
    }

    /**
     * Get userCreditsUsage
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getUserCreditsUsage()
    {
        return $this->userCreditsUsage;
    }
}
