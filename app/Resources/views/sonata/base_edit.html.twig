{% extends base_template %}

{% block title %}
    {% if admin.id(object) is not null %}
        {{ "title_edit"|trans({'%name%': admin.toString(object)|truncate(15) }, 'SonataAdminBundle') }}
    {% else %}
        {{ "title_create"|trans({}, 'SonataAdminBundle') }}
    {% endif %}
{% endblock%}

{% block navbar_title %}
    {{ block('title') }}
{% endblock %}

{% block actions %}
    <li>{% include 'SonataAdminBundle:Button:show_button.html.twig' %}</li>
    <li>{% include 'SonataAdminBundle:Button:history_button.html.twig' %}</li>
    <li>{% include 'SonataAdminBundle:Button:acl_button.html.twig' %}</li>
    <li>{% include 'SonataAdminBundle:Button:list_button.html.twig' %}</li>
    <li>{% include 'SonataAdminBundle:Button:create_button.html.twig' %}</li>
{% endblock %}

{% block tab_menu %}{{ knp_menu_render(admin.sidemenu(action), {'currentClass' : 'active', 'template': admin_pool.getTemplate('tab_menu_template')}, 'twig') }}{% endblock %}

{% use 'sonata/base_edit_form.html.twig' with form as parentForm %}
{% import "SonataAdminBundle:CRUD:base_edit_form_macro.html.twig" as form_helper %}

{% block form %}
    {{ block('parentForm') }}
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script type="text/javascript">
        $(document).ready(function() {
{#          used just for UserAdmin#}
          {% if admin.formFieldDescriptions.county is defined %}
            var county = $("#{{ admin.uniqId }}_county");
            county.change(updateCities()); // Bind the function to updateCities
            county.change(); // Manual trigger to update cities in Document load.

            function updateCities() {
                return function () {
                    var countyId = $("#{{ admin.uniqId }}_county option:selected").val();
                    var city = $("#{{ admin.uniqId }}_city");
                    city.empty();

                    {% if object.county is not null %}
                        if ( countyId != {{ object.county.id }} ) {
                            //empty city value
                            jQuery(city.prev().find('a > :first-child')).html('');
                        }
                    {% else %}
                        jQuery(city.prev().find('a > :first-child')).html('');
                    {% endif %}

                    var locale = '{{ app.request.get('_locale') }}';
                    var objectId = '{{ admin.id(object) }}';

                    var url = '{{ admin.generateUrl('getCities') }}';
                    $.post(url, { countyId: countyId }, function(data){
                        var msg = '';
                        $.each(data, function(index, element){
                            msg = msg + '<option value="' + index + '">' + element + '</option>';
                        });
                        city.empty().append(msg);
                    },"json");

                    city.val("option:first").attr("selected", true);
                };
            }
          {% endif %}
      
{#          used for CreditsUsageAdmin#}
          {% if admin.formFieldDescriptions.document is defined %}
            var document = $("#{{ admin.uniqId }}_document");
            document.change(updateCreditValue()); // Bind the function to updateCreditValue
            {% if not (object.deleted) %}
                document.change(); // Manual trigger to update creditValue in Document load.
            {% endif %}
            var video = $("#{{ admin.uniqId }}_video");
            video.change(updateCreditValueForVideo()); // Bind the function to updateCreditValue
            {% if not (object.deleted) %}
                video.change(); // Manual trigger to update creditValue in Document load.
            {% endif %}
                
            function updateCreditValue() {
                return function () {
                    var documentId = $("#{{ admin.uniqId }}_document option:selected").val();

                    var url = '{{ admin.generateUrl('getDocumentCreditValue') }}';
                    $.post(url, { documentId: documentId }, function(data){
                        $("#{{ admin.uniqId }}_credit").val(data).prop("readonly", false);
                        $("#{{ admin.uniqId }}_video").removeAttr("disabled");
                        if (data !== '') {
                           $("#{{ admin.uniqId }}_credit").prop("readonly", true); 
                           $("#{{ admin.uniqId }}_video").prop("disabled", true);
                        }
                    },"json");
                };
            }
            
            function updateCreditValueForVideo() {
                return function () {
                    var videoId = $("#{{ admin.uniqId }}_video option:selected").val();

                    var url = '{{ admin.generateUrl('getVideoCreditValue') }}';
                    $.post(url, { videoId: videoId }, function(data){
                        $("#{{ admin.uniqId }}_credit").val(data).prop("readonly", false);
                        $("#{{ admin.uniqId }}_document").removeAttr("disabled");
                        if (data !== '') {
                           $("#{{ admin.uniqId }}_credit").prop("readonly", true); 
                           $("#{{ admin.uniqId }}_document").prop("disabled", true);
                        }
                    },"json");
                };
            }
          {% endif %}

{#          used for OrderAdmin#}
          {% if admin.formFieldDescriptions.subscription is defined %}
            var subscription = $("#{{ admin.uniqId }}_subscription");
            subscription.change(updateDomains()); // Bind the function to updateDomains
            {% if not (object.deleted or object.firstActive) %}
                subscription.change(); // Manual trigger to update domains in Document load.
            {% endif %}

            function updateDomains() {
                return function() {
                    var subscriptionId = $("#{{ admin.uniqId }}_subscription option:selected").val();
                    var url = '{{ admin.generateUrl('getDomains') }}';
                    $.post(url, { subscriptionId: subscriptionId }, function(data) {
                        //initialize
                        $("#{{ admin.uniqId }}_domains li input").each(function(){
                            $(this).iCheck('destroy');
                            $(this).removeAttr('disabled');
                            $(this).removeAttr('onclick');
                            $(this).parent().parent().show();
                            $(this).removeAttr('checked');
                        });

                        if (typeof data.credit !== "undefined") {
                            $("#{{ admin.uniqId }}_creditValue").val(data.credit).prop('readonly', 'true');
                        }
                        else {
                            $("#{{ admin.uniqId }}_creditValue").val("{{ object.creditValue }}").removeAttr('readonly');
                        }

                        if (typeof data.valability !== "undefined") {
                            var valabilityDays = data.valability * 365;
                            $("#{{ admin.uniqId }}_valabilityDays").val(valabilityDays).prop('readonly', 'true');
                        }
                        else {
                            $("#{{ admin.uniqId }}_valabilityDays").val("{{ object.valabilityDays }}").removeAttr('readonly');
                        }

                        if (typeof data.price !== "undefined") {
                            $("#{{ admin.uniqId }}_price").val(data.price).prop('readonly', 'true');
                        }
                        else {
                            $("#{{ admin.uniqId }}_price").val("{{ object.price }}").removeAttr('readonly');
                        }

                        if (typeof data.domainAmount !== "undefined") {
                            $("#{{ admin.uniqId }}_domainAmount").val(data.domainAmount);

                            // add disabled & hide to domain that are not part of subscription
                            var counter = 0;
                            $("#{{ admin.uniqId }}_domains li input").each(function(){
                              if (!data.domains.hasOwnProperty($(this).val())) {
                                $(this).prop('disabled', 'true');
                                $(this).parent().parent().hide();
                              } else {
                                counter++;
                              }
                            });

                            // add check to domain if domainAmount equal with valid domains
                            if (counter == data.domainAmount) {
                                $('#sonata-ba-field-container-{{ admin.uniqId }}_domains label').first()
                                        .html("{{ 'Domains' | trans }}");
                                $("#{{ admin.uniqId }}_domains li input").each(function(){
                                  if (data.domains.hasOwnProperty($(this).val())) {
                                    $(this).prop('checked', 'true');
                                    $(this).attr('onclick', 'return false;');
                                  }
                                });
                            }
                            else {
                                var domain_label = "{{ 'Domains (You can select max %domainAmount% domains)' | trans }}";
                                domain_label = domain_label.replace('%domainAmount%', data.domainAmount);
                                $('#sonata-ba-field-container-{{ admin.uniqId }}_domains label').first().html(domain_label);

                                //add validation for check
                                $("#{{ admin.uniqId }}_domains input").on("click", function(){
                                    if ($("#{{ admin.uniqId }}_domainAmount").val() > 0) {
                                        if ($(this).is(':checked')) {
                                            var noChecked = $("#{{ admin.uniqId }}_domains input").filter(':checked').length;
                                            if ($("#{{ admin.uniqId }}_domainAmount").val() < noChecked) {
                                                $(this).removeAttr('checked');
                                            }
                                        } else {
                                            $(this).removeAttr('checked');
                                        }
                                    }
                                });
                            }
                        }
                        else {
                            $('#sonata-ba-field-container-{{ admin.uniqId }}_domains label').first().html("{{ 'Domains' | trans }}");
                            $("#{{ admin.uniqId }}_domainAmount").val("");
                            $("#{{ admin.uniqId }}_domains li input").each(function(){
                                $(this).removeAttr('disabled');
                                $(this).removeAttr('onclick');
                                $(this).removeAttr('checked');
                                $(this).parent().parent().show();
                            });
                        }

                        //load domains saved
                        var load_domains = true;
                        {% if object.subscription is not null %}
                            if (subscriptionId != {{ object.subscription.id }}) {
                                load_domains = false;
                            }
                        {% else %}
                            if (subscriptionId > 0) {
                                load_domains = false;
                            }
                        {% endif %}
                        if (load_domains) {
                            {% if object.domains is not null %}
                                var allDomains = []
                                $("#{{ admin.uniqId }}_domains li span").each(function(index){
                                    allDomains[index] = $(this).text().trim();
                                });
                                {% for domain in object.domains %}
                                    if ($.inArray('{{ domain }}', allDomains) >=0) {
                                        var labels = $("#{{ admin.uniqId }}_domains li span:contains('{{ domain }}')");
                                        labels.each(function(){
                                            label = this;
                                            if ($(label).text().trim() == '{{ domain }}') {
                                                $(label).prev('input').prop('checked', true);
                                            }
                                        });
                                  }
                                {% endfor %}
                            {% endif %}
                        }

                    }, "json");
                };
            }
          {% endif %}
        });
    </script>
{% endblock %}

