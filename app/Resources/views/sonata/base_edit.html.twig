{% extends base_template %}

{% block title %}
    {% if admin.id(object) is not null %}
        {{ "title_edit"|trans({'%name%': admin.toString(object)|truncate(15) }, 'SonataAdminBundle') }}
    {% else %}
        {{ "title_create"|trans({}, 'SonataAdminBundle') }}
    {% endif %}
{% endblock%}

{% block navbar_title %}
    {{ block('title') }}
{% endblock %}

{% block actions %}
    <li>{% include 'SonataAdminBundle:Button:show_button.html.twig' %}</li>
    <li>{% include 'SonataAdminBundle:Button:history_button.html.twig' %}</li>
    <li>{% include 'SonataAdminBundle:Button:acl_button.html.twig' %}</li>
    <li>{% include 'SonataAdminBundle:Button:list_button.html.twig' %}</li>
    <li>{% include 'SonataAdminBundle:Button:create_button.html.twig' %}</li>
{% endblock %}

{% block tab_menu %}{{ knp_menu_render(admin.sidemenu(action), {'currentClass' : 'active', 'template': admin_pool.getTemplate('tab_menu_template')}, 'twig') }}{% endblock %}

{% use 'sonata/base_edit_form.html.twig' with form as parentForm %}
{% import "SonataAdminBundle:CRUD:base_edit_form_macro.html.twig" as form_helper %}

{% block form %}
    {{ block('parentForm') }}
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script type="text/javascript">
        $(document).ready(function() {
{#          used just for ProfileAdmin#}
          {% if admin.formFieldDescriptions.county is defined %}
            var county = $("#{{ admin.uniqId }}_county");
            county.change(updateCities()); // Bind the function to updateCities
            county.change(); // Manual trigger to update cities in Document load.

            function updateCities() {
                return function () {
                    var countyId = $("#{{ admin.uniqId }}_county option:selected").val();
                    var city = $("#{{ admin.uniqId }}_city");
                    city.empty();

                    {% if object.county is not null %}
                        if ( countyId != {{ object.county.id }} ) {
                            //empty city value
                            jQuery(city.prev().find('a > :first-child')).html('');
                        }
                    {% else %}
                        jQuery(city.prev().find('a > :first-child')).html('');
                    {% endif %}

                    var locale = '{{ app.request.get('_locale') }}';
                    var objectId = '{{ admin.id(object) }}';

                    var url = '{{ admin.generateUrl('getCities') }}';
                    $.post(url, { countyId: countyId }, function(data){
                        var msg = '';
                        $.each(data, function(index, element){
                            msg = msg + '<option value="' + index + '">' + element + '</option>';
                        });
                        city.empty().append(msg);
                    },"json");

                    city.val("option:first").attr("selected", true);
                };
            }
          {% endif %}
      
{#          used just for UserAdmin#}     
          {% if admin.formFieldDescriptions.profile is defined %}
            var county = $("#{{ admin.uniqId }}_profile_county");
            county.change(updateCities()); // Bind the function to updateCities
            county.change(); // Manual trigger to update cities in Document load.

            function updateCities() {
                return function () {
                    var countyId = $("#{{ admin.uniqId }}_profile_county option:selected").val();
                    var city = $("#{{ admin.uniqId }}_profile_city");
                    city.empty();

                    {% if object.profile is not null and object.profile.county is not null %}
                        if ( countyId != {{ object.profile.county.id }} ) {
                            //empty city value
                            jQuery(city.prev().find('a > :first-child')).html('');
                        }
                    {% else %}
                        jQuery(city.prev().find('a > :first-child')).html('');
                    {% endif %}

                    var locale = '{{ app.request.get('_locale') }}';
                    var objectId = '{{ admin.id(object) }}';

                    var url = '{{ admin.generateUrl('getCities') }}';
                    $.post(url, { countyId: countyId }, function(data){
                        var msg = '';
                        $.each(data, function(index, element){
                            msg = msg + '<option value="' + index + '">' + element + '</option>';
                        });
                        city.empty().append(msg);
                    },"json");

                    city.val("option:first").attr("selected", true);
                };
            }
          {% endif %}      
      
{#          used for CreditsUsageAdmin#}
          {% if admin.formFieldDescriptions.document is defined %}
            var document = $("#{{ admin.uniqId }}_document");
            document.change(updateCreditValue()); // Bind the function to updateCreditValue
            {% if not (object.deleted) %}
                document.change(); // Manual trigger to update creditValue in Document load.
            {% endif %}
            var video = $("#{{ admin.uniqId }}_video");
            video.change(updateCreditValueForVideo()); // Bind the function to updateCreditValue
            {% if not (object.deleted) %}
                video.change(); // Manual trigger to update creditValue in Document load.
            {% endif %}
                
            function updateCreditValue() {
                return function () {
                    var documentId = $("#{{ admin.uniqId }}_document option:selected").val();

                    var url = '{{ admin.generateUrl('getDocumentCreditValue') }}';
                    $.post(url, { documentId: documentId }, function(data){
                        $("#{{ admin.uniqId }}_credit").val(data).prop("readonly", false);
                        $("#{{ admin.uniqId }}_video").removeAttr("disabled");
                        if (data !== '') {
                           $("#{{ admin.uniqId }}_credit").prop("readonly", true); 
                           $("#{{ admin.uniqId }}_video").prop("disabled", true);
                        }
                    },"json");
                };
            }
            
            function updateCreditValueForVideo() {
                return function () {
                    var videoId = $("#{{ admin.uniqId }}_video option:selected").val();

                    var url = '{{ admin.generateUrl('getVideoCreditValue') }}';
                    $.post(url, { videoId: videoId }, function(data){
                        $("#{{ admin.uniqId }}_credit").val(data).prop("readonly", false);
                        $("#{{ admin.uniqId }}_document").removeAttr("disabled");
                        if (data !== '') {
                           $("#{{ admin.uniqId }}_credit").prop("readonly", true); 
                           $("#{{ admin.uniqId }}_document").prop("disabled", true);
                        }
                    },"json");
                };
            }
          {% endif %}

          {% if admin.formFieldDescriptions.subdomain is defined %}

            var subdomainSelector = $("#{{ admin.uniqId }}_subdomain");
            subdomainSelector.change(updateCategories()); // Bind the function to updateCategories
            subdomainSelector.change(); // Manual trigger to update categories in Document load.

            function updateCategories(){
                return function () {
                    var selectedSubdomain = $("#{{ admin.uniqId }}_subdomain option:selected").val();
                    var folder = $("#{{ admin.uniqId }}_folder");

                    folder.empty();

                    var locale = '{{ app.request.get('_locale') }}';

                    var objectId = '{{ admin.id(object) }}'

                    var url = '{{ admin.generateUrl('getFolders') }}';

                    $.post(url, { subdomainId: selectedSubdomain }, function(data){
                        folder.empty().append(data);
                    },"text");

                    folder.val("option:first").attr("selected", true);
                };
            }
          {% endif %}
        });
    </script>
{% endblock %}

