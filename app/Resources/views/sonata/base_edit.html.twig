{% extends base_template %}

{% block title %}
    {% if admin.id(object) is not null %}
        {{ "title_edit"|trans({'%name%': admin.toString(object)|truncate(15) }, 'SonataAdminBundle') }}
    {% else %}
        {{ "title_create"|trans({}, 'SonataAdminBundle') }}
    {% endif %}
{% endblock %}

{% block navbar_title %}
    {{ block('title') }}
{% endblock %}

{% block actions %}
    {% include 'SonataAdminBundle:CRUD:action_buttons.html.twig' %}
{% endblock %}

{% block tab_menu %}{{ knp_menu_render(admin.sidemenu(action), {'currentClass' : 'active', 'template': sonata_admin.adminPool.getTemplate('tab_menu_template')}, 'twig') }}{% endblock %}

{% use 'SonataAdminBundle:CRUD:base_edit_form.html.twig' with form as parentForm %}
{% import "SonataAdminBundle:CRUD:base_edit_form_macro.html.twig" as form_helper %}

{% block form %}
    {{ block('parentForm') }}
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script type="text/javascript">
        $(document).ready(function() {
{#          used just for UserAdmin#}
          {% if admin.formFieldDescriptions.county is defined %}
            var county = $("#{{ admin.uniqId }}_county");
            county.change(updateCities()); // Bind the function to updateCities
            county.change(); // Manual trigger to update cities in Document load.

            function updateCities() {
                return function () {
                    var countyId = $("#{{ admin.uniqId }}_county option:selected").val();
                    var city = $("#{{ admin.uniqId }}_city");
                    city.empty();

                    {% if object.county is not null %}
                      if ( countyId != {{ object.county.id }} ) {
                        //empty city value
                        jQuery(city.prev().find('a > :first-child')).html('');
                      }
                    {% else %}
                      jQuery(city.prev().find('a > :first-child')).html('');
                    {% endif %}

                    var locale = '{{ app.request.get('_locale') }}';
                    var objectId = '{{ admin.id(object) }}';

                    var url = '{{ admin.generateUrl('getCities') }}';
                    $.post(url, { countyId: countyId }, function(data){
                        var msg = '';
                        $.each(data, function(index, element){
                          msg = msg + '<option value="' + index + '">' + element + '</option>';
                        });
                        city.empty().append(msg);
                    },"json");

                    city.val("option:first").attr("selected", true);
                };
            }
          {% endif %}

          {% if admin.formFieldDescriptions.subscription is defined %}
            var subscription = $("#{{ admin.uniqId }}_subscription");
            subscription.change(updateDomains()); // Bind the function to updateDomains
            subscription.change(); // Manual trigger to update domains in Document load.

            function updateDomains() {
                return function() {
                    var subscriptionId = $("#{{ admin.uniqId }}_subscription option:selected").val();
                    var url = '{{ admin.generateUrl('getDomains') }}';
                    $.post(url, { subscriptionId: subscriptionId }, function(data) {
                      //initialize
                      $("#{{ admin.uniqId }}_domains li input").each(function(){
                          $(this).iCheck('destroy');
                          $(this).removeAttr('disabled');
                          $(this).removeAttr('checked');
                      });

                      {% if object.subscription is not null %}
                        //load check for subscription saved
                        if (subscriptionId == {{ object.subscription.id }}) {
                          {% if object.domains is not null %}
                            var allDomains = []
                            $("#{{ admin.uniqId }}_domains li span").each(function(index){
                              allDomains[index] = $(this).text();
                            });
                            {% for domain in object.domains %}
                              if ($.inArray('{{ domain }}', allDomains) >=0) {
                                $("#{{ admin.uniqId }}_domains li span:contains('{{ domain }}')")
                                        .prev('input').prop('checked', true);
                              }
                            {% endfor %}
                          {% endif %}
                        }
                      {% endif %}

                      if (typeof data.credit !== "undefined") {
                        $("#{{ admin.uniqId }}_creditValue").val(data.credit).prop('readonly', 'true');
                      }
                      else {
                        $("#{{ admin.uniqId }}_creditValue").val("").removeAttr('readonly');
                      }

                      if (typeof data.valability !== "undefined") {
                        var valabilityDays = data.valability * 365;
                        $("#{{ admin.uniqId }}_valabilityDays").val(valabilityDays).prop('readonly', 'true');
                      }
                      else {
                        $("#{{ admin.uniqId }}_valabilityDays").val("").removeAttr('readonly');
                      }

                      if (typeof data.price !== "undefined") {
                        $("#{{ admin.uniqId }}_price").val(data.price).prop('readonly', 'true');
                      }
                      else {
                        $("#{{ admin.uniqId }}_price").val("").removeAttr('readonly');
                      }

                      if (typeof data.domainAmount !== "undefined") {
                        $("#{{ admin.uniqId }}_domainAmount").val(data.domainAmount);

                        // add disabled to domain that are not part of subscription
                        var counter = 0;
                        $("#{{ admin.uniqId }}_domains li input").each(function(){
                          if (!data.domains.hasOwnProperty($(this).val())) {
                            $(this).prop('disabled', 'true');
                          } else {
                            counter++;
                          }
                        });

                        // add check to domain if domainAmount equal with valid domains
                        if (counter == data.domainAmount) {
                          $('#sonata-ba-field-container-{{ admin.uniqId }}_domains label').first().html("Domains");
                          $("#{{ admin.uniqId }}_domains li input").each(function(){
                            if (data.domains.hasOwnProperty($(this).val())) {
                              $(this).prop('checked', 'true');
                              $(this).prop('disabled', 'true');
                            }
                          });
                        }
                        else {
                          $('#sonata-ba-field-container-{{ admin.uniqId }}_domains label')
                                  .first().html("Domains (You can select max " + data.domainAmount + " domains)");

                          //add validation for check
                          $("#{{ admin.uniqId }}_domains input").on("click", function(){
                              if ($(this).is(':checked')) {
                                var noChecked = $("#{{ admin.uniqId }}_domains input").filter(':checked').length;
                                if ($("#{{ admin.uniqId }}_domainAmount").val() < noChecked) {
                                  $(this).removeAttr('checked');
                                }
                              } else {
                                $(this).removeAttr('checked');
                              }
                          });
                        }
                      }
                      else {
                        $('#sonata-ba-field-container-{{ admin.uniqId }}_domains label').first().html("Domains");
                        $("#{{ admin.uniqId }}_domainAmount").val("");
                        $("#{{ admin.uniqId }}_domains").removeClass("disabled");
                        $("#{{ admin.uniqId }}_domains li input").each(function(){
                          $(this).parent().removeClass('disabled');
                          $(this).removeAttr('disabled');
                          $(this).removeAttr('checked');
                        });
                      }
                    }, "json");
                };
            }
          {% endif %}
        });
    </script>
{% endblock %}

