{% extends "base.html.twig" %}

{% block stylesheets %}
    {{ parent() }}
    {% stylesheets '@CraueFormFlowBundle/Resources/assets/css/buttons.css' %}
        <link type="text/css" rel="stylesheet" href="{{ asset_url }}" />
    {% endstylesheets %}
{% endblock %}
    
{% block modal %}
    {% if not creditsUsage.isFormConfigFinished %}
        {% include "document_form/config/config_form_add_uniqueness_on_form_modal.html.twig" %}
    {% endif %}
{% endblock %}

{% block ccontainer %}
    {% set formConfig  = creditsUsage.formConfig | json_decode %}

    <h2 class="title">{{ 'Evidenta Gestiunii Deseurilor' | trans }}</h2>

    {% for flash_message in app.session.flashbag.get('form-success') %}
        <h4 class="color-green text-center first flash-message" >{{ flash_message|trans }}</h4>
    {% endfor %}

    {% for flash_message in app.session.flashbag.get('form-error') %}
        <h4 class="color-red text-center first flash-message" >{{ flash_message|trans|raw }}</h4>
    {% endfor %}

    {% for flash_message in app.session.flashbag.get('formular-info') %}
        <h4 class="color-green text-center first flash-message" >{{ flash_message|trans }}</h4>
    {% endfor %}

    <h4 class="color-red text-center first" id="globalErrors" hidden="hidden">{{ 'Mai aveti erori. Verificati si celelalte capitole!' | trans }}</h4>

    {% if not creditsUsage.isFormConfigFinished %}
        {% include "document_form/config/config_form_uniqueness_on_form_egd.html.twig" with {'creditsUsage': creditsUsage, 'isUserException': isUserException } %}
    {% endif %}
    
    {{ render(controller('AppBundle:Formular:getFormularDocumentsShortFormConfigurationText', {'creditUsageId' : creditsUsage.id, 'short' : false })) }}

    <div class="col-xs-2">
        {% include 'CraueFormFlowBundle:FormFlow:stepList.html.twig' %}
    </div>
    <div class="col-xs-10">
        {% form_theme form with 'document_form/base/form_fields.html.twig' %}
        <form class="formular-form" id="evidenta_gestiunii_deseurilor" method="post" {{ form_enctype(form) }}>
            {{ form_errors(form) }}
            
            {% if creditsUsage.isFormConfigFinished %}
                {% if flow.getCurrentStepNumber() == 1 %}
                    {{ form_row(form.operatia, {'attr': {'class': 'operatia max-width-500', 'label_info': 'formular-documents.info.egd.operatia' | trans } }) }}
                {% endif %}
            {% endif %}
            
            {% if flow.getCurrentStepNumber() == ((creditsUsage.isFormConfigFinished) ? 2 : 1) %}
                {{ form_row(form.agentEconomic, 
                    {'attr': {'data-val': 'true',
                    'data-val-required': 'Acest camp este obligatoriu' | trans,
                    'label_info': 'formular-documents.info.egd.agentEconomic' | trans
                    } } ) }}
                <span class="field-validation-valid" data-valmsg-for="{{ form.agentEconomic.vars.full_name }}" data-valmsg-replace="true" ></span>
                {{ form_row(form.stareFizica, {'attr': {'class': 'stareFizica max-width-500', 'label_info': 'formular-documents.info.egd.stareFizica' | trans } }) }}
                {{ form_row(form.unitateMasura, {'attr': {'class': 'unitateMasura max-width-500', 'label_info': 'formular-documents.info.egd.unitateMasura' | trans } }) }}
                {{ form_row(form.stocareTip, {'attr': {'class': 'stocareTip max-width-500', 'label_info': 'formular-documents.info.egd.stocareTip' | trans } }) }}
                {{ form_row(form.tratareMod, {'attr': {'class': 'tratareMod max-width-500', 'label_info': 'formular-documents.info.egd.tratareMod' | trans } }) }}
                {{ form_row(form.transportMijloc, {'attr': {'class': 'transportMijloc max-width-500', 'label_info': 'formular-documents.info.egd.transportMijloc' | trans } }) }}
                {{ form_row(form.transportDestinatie, {'attr': {'class': 'transportDestinatia max-width-500', 'label_info': 'formular-documents.info.egd.transportDestinatie' | trans } }) }}
                {% if formConfig.operatia is defined and formConfig.operatia == 3 %}
                    {{ form_row(form.operatiaDeValorificare, {'attr': {'class': 'operatiaDeValorificare max-width-500', 'label_info': 'formular-documents.info.egd.operatiaDeValorificare' | trans } }) }}
                {% endif %}
                {% if formConfig.operatia is defined and formConfig.operatia == 4 %}
                    {{ form_row(form.operatiaDeEliminare, {'attr': {'class': 'operatiaDeEliminare max-width-500', 'label_info': 'formular-documents.info.egd.operatiaDeEliminare' | trans } }) }}
                {% endif %}
                <label>
                    {% if formConfig.operatia is not defined %}
                        {{ 'Agentul economic care efectueaza operatia de valorificare sau eliminare' | trans }}
                    {% endif %}
                    {% if formConfig.operatia is defined and formConfig.operatia == 3 %}
                        {{ 'Agentul economic care efectueaza operatia de valorificare' | trans }}
                    {% endif %}
                    {% if formConfig.operatia is defined and formConfig.operatia == 4 %}
                        {{ 'Agentul economic care efectueaza operatia de eliminare' | trans }}
                    {% endif %}
                    {{ include('document_form/base/form_label_info.html.twig', {'label_info': 'formular-documents.info.egd.EGDCompany' | trans }) }} 
                </label>
                <p>{{ 'Va rugam introduceti in ordinea cronologica a lunilor agentii economici' | trans }}</p>
                <ul id="company-fields-list" data-prototype="
                    {% filter escape %}
                        {{ include('document_form/base/prototype_company.html.twig', { 'form': form.EGDCompany.vars.prototype }) }}
                    {% endfilter %}">
                    {% for item in form.EGDCompany %}
                        <li>
                            {{ form_row(item.name, 
                                {'attr': {'data-val': 'true',
                                'data-val-required': 'Acest camp este obligatoriu' | trans,
                                } } ) }}
                            <span class="field-validation-valid" data-valmsg-for="{{ form.EGDCompany.vars.full_name }}[{{ loop.index0 }}][name]" data-valmsg-replace="true" ></span>
                            {{ form_row(item.startMonth) }}
                        </li>
                    {% endfor %}
                </ul>
                {% if creditsUsage.isFormConfigFinished %}
                    <a href="#" id="add-another-company">{{ 'Adauga o firma' | trans }}</a>
                    <div class="color-red no-display" id="#error-no-company">{{ 'Adaugati cel putin 1 firma' | trans }}</div>
                    <script type="text/javascript">
                        // keep track of how many company fields have been rendered
                        var companyCount = '{{ form.EGDCompany|length }}';

                        jQuery(document).ready(function() {
                            
                            var companyList = jQuery('#company-fields-list');
                                
                            // add a delete link to all of the existing speaker form li elements
                            companyList.find('li').each(function(index) {
                                addCompanyFormDeleteLink($(this));
                            });
                            
                            jQuery('#add-another-company').click(function(e) {
                                e.preventDefault();
                                jQuery('.no-display').hide();

                                var companyList = jQuery('#company-fields-list');
                                
                                // grab the prototype template
                                var newWidget = companyList.attr('data-prototype');
                                // replace the "__name__" used in the id and name of the prototype
                                // with a number that's unique to your companies
                                newWidget = newWidget.replace(/__name__/g, companyCount);
                                companyCount++;

                                // create a new list element and add it to the list
                                var newLi = jQuery('<li></li>').html(newWidget);
                                newLi.appendTo(companyList);
                                addCompanyFormDeleteLink(newLi);
                            });
                        })
                        
                        function addCompanyFormDeleteLink($companyFormLi) {
                            var $removeFormA = $('<a href="#">{{ 'Sterge firma'|trans }}</a>');
                            $companyFormLi.append($removeFormA);

                            $removeFormA.on('click', function(e) {
                                // prevent the link from creating a "#" on the URL
                                e.preventDefault();

                                // remove the li for the company form
                                $companyFormLi.remove();
                            });
                        }
                    </script>
                {% endif %}
            {% endif %}

            {% if flow.getCurrentStepNumber() == ((creditsUsage.isFormConfigFinished) ? 3 : 2) %}
                <h3>
                    {{ 'CAPITOLUL 1' | trans}}<br/>{{'Generare deseuri' | trans}}
                    {{ include('document_form/base/form_label_info.html.twig', {'label_info': 'formular-documents.info.egd.chapter1' | trans }) }} 
                </h3>
                {{ form_row(form.lastYearInStock, {'label': 'Ramas in stoc de anul trecut (se va adauga in plus la luna Ianuarie)',                             'attr': {'class': 'lastYearInStock', 
                                'data-val': 'true',
                                'data-val-required': 'Acest camp este obligatoriu' | trans,
                                'data-val-regex': 'Nu este valoare pozitiva' | trans,
                                'data-val-regex-pattern': '^\\s*(?=.*[0-9])\\d*(?:[\\.\\,]\\d{1,2})?\\s*$',
                                'label_info': 'formular-documents.info.egd.lastYearInStock' | trans
                                } }) }}
                <span class="field-validation-valid" data-valmsg-for="{{ form.lastYearInStock.vars.full_name }}" data-valmsg-replace="true" ></span>
                <br/>
                <table class="table-bordered text-center form-table form-table-layout-fixed">
                    <tr>
                        <th class="text-center width-35-px" rowspan="3">{{ 'Nr.' | trans }}</th>
                        <th class="text-center width-105-px" rowspan="3">{{ 'Luna' | trans }}</th>
                        <th class="text-center" colspan="3">{{ 'Cantitatea de deseuri' | trans }}</th>
                    </tr>
                    <tr>
                        <th class="text-center" rowspan="2">{{ 'Generate' | trans }}</th>
                        <th class="text-center" colspan="2">{{ 'din care:' | trans }}</th>
                    </tr>
                    <tr>
                        {% if formConfig.operatia == 3 %}
                        <th class="text-center">{{ 'valorificata:' | trans }}</th>
                        {% endif %}
                        {% if formConfig.operatia == 4 %}
                        <th class="text-center">{{ 'eliminata final:' | trans }}</th>
                        {% endif %}
                        <th class="text-center">{{ 'ramasa in stoc:' | trans }}</th>
                    </tr>
                    {% for key,item in form.EGD1GenerareDeseuri %}
                        <tr>
                            <td class="width-35-px">{{ loop.index }}</td>
                            <td class="width-105-px">{{ form_widget(item.luna) }}</td>
                            <td>{{ form_widget(item.cantitateDeseuGenerate, 
                                    {'attr': {'class': 'text-right EGD1CantitateDeseuGenerate EGD1CantitateDeseuGenerate' ~ key, 
                                    'data-val': 'true',
                                    'data-val-regex': 'Nu este valoare pozitiva' | trans,
                                    'data-val-regex-pattern': '^\\s*(?=.*[0-9])\\d*(?:[\\.\\,]\\d{1,2})?\\s*$', 
                                    'onkeypress': 'validate(event, this)',
                                    'tabindex': loop.index0 * 2, 
                                    'autocomplete': 'off' } }
                                    ) 
                                }}
                                <span class="field-validation-valid" data-valmsg-for="{{ item.cantitateDeseuGenerate.vars.full_name }}" data-valmsg-replace="true" ></span>
                            </td>
                            {% if formConfig.operatia == 3 %}
                            <td>{{ form_widget(item.cantitateDeseuValorificata, {'attr': {'class': 'text-right EGD1CantitateDeseuValorificata EGD1CantitateDeseuValorificata' ~ key, 
                                    'data-val': 'true',
                                    'data-val-regex': 'Nu este valoare pozitiva' | trans,
                                    'data-val-regex-pattern': '^\\s*(?=.*[0-9])\\d*(?:[\\.\\,]\\d{1,2})?\\s*$', 
                                    'onkeypress': 'validate(event, this)',
                                    'tabindex': loop.index0 * 2 + 1,
                                    'autocomplete': 'off' } }
                                    ) 
                                }}
                                <span class="field-validation-valid" data-valmsg-for="{{ item.cantitateDeseuValorificata.vars.full_name }}" data-valmsg-replace="true" ></span>
                            </td>
                            <td class="EGD1CantitateDeseuInStocValorificata{{ key }} text-right calcul-valorificata">{{ formTemplateData.EGDTotals.EGD1CantitateDeseuInStocValorificata[key] }}</td>
                            {% endif %}
                            {% if formConfig.operatia == 4 %}
                            <td>{{ form_widget(item.cantitateDeseuEliminata, {'attr': {'class': 'text-right EGD1CantitateDeseuEliminata EGD1CantitateDeseuEliminata' ~ key, 
                                    'data-val': 'true',
                                    'data-val-regex': 'Nu este valoare pozitiva' | trans,
                                    'data-val-regex-pattern': '^\\s*(?=.*[0-9])\\d*(?:[\\.\\,]\\d{1,2})?\\s*$', 
                                    'onkeypress': 'validate(event, this)', 
                                    'tabindex': loop.index0 * 2 + 1, 
                                    'autocomplete': 'off' } }
                                    ) 
                                }}
                                <span class="field-validation-valid" data-valmsg-for="{{ item.cantitateDeseuEliminata.vars.full_name }}" data-valmsg-replace="true" ></span>
                            </td>      
                            <td class="EGD1CantitateDeseuInStocEliminata{{ key }} text-right calcul-eliminata">{{ formTemplateData.EGDTotals.EGD1CantitateDeseuInStocEliminata[key] }}</td>
                            {% endif %}
                        </tr>
                    {% endfor %}
                    <tr>
                        <td class="width-35-px"></td>
                        <td class="width-105-px text-left">{{ 'TOTAL' | trans }}</td>
                        <td id="EGD1CantitateDeseuGenerateTotal" class="text-right">{{ formTemplateData.EGDTotals.EGD1CantitateDeseuGenerateTotal }}</td>
                        {% if formConfig.operatia == 3 %}
                        <td id="EGD1CantitateDeseuValorificataTotal" class="text-right">{{ formTemplateData.EGDTotals.EGD1CantitateDeseuValorificataTotal }}</td>
                        {% endif %}
                        {% if formConfig.operatia == 4 %}
                        <td id="EGD1CantitateDeseuEliminataTotal" class="text-right">{{ formTemplateData.EGDTotals.EGD1CantitateDeseuEliminataTotal }}</td>
                        {% endif %}
                        <td id="EGD1CantitateDeseuInStocTotal" class="text-right">{{ formTemplateData.EGDTotals.EGD1CantitateDeseuInStocTotal }}</td>
                    </tr>
                </table> 
            {% endif %}

            <div class="hidden">{{ form_rest(form) }}</div>

            {% include 'document_form/base/form_flow_buttons.html.twig' %}
        </form>
    </div>
    <script type="text/javascript">
        jQuery(document).ready(function () {
            {% for key in formTemplateData.EGDTotals|keys %}
                var totalClass{{ key }} = '{{ key }}'.replace('Total', '');
                jQuery('.' + totalClass{{ key }}).change(function () {
                    var sum{{ key }} = 0;
                    jQuery('.' + totalClass{{ key }}).each(function () {
                        if (jQuery(this).val().replace(',', '.').replace(' ', '') !== '') {
                            sum{{ key }} += parseFloat(jQuery(this).val());
                        }
                    });
                    jQuery('#{{ key }}').text(sum{{ key }});
                });            
            {% endfor %}
                    
            {% if form.EGD1GenerareDeseuri is defined %}
                {% if formConfig.operatia == 3 %}
                    jQuery('.lastYearInStock').change(function(){
                        jQuery('.calcul-valorificata').each(function(index){
                            calculValorificata(index);
                        });
                    });
                    {% for key in form.EGD1GenerareDeseuri|keys %}
                        jQuery('.EGD1CantitateDeseuGenerate{{ key }}').change(function(){
                            calculValorificata({{ key }});
                        });
                        jQuery('.EGD1CantitateDeseuValorificata{{ key }}').change(function(){
                            calculValorificata({{ key }});
                        });
                    {% endfor %}
                    function calculValorificata(key) {
                        var lastYearInStock = (key == 0) ? jQuery('.lastYearInStock').val() : 0;
                        var value = parseFloat(jQuery('.EGD1CantitateDeseuGenerate' + key).val()) - 
                                parseFloat(jQuery('.EGD1CantitateDeseuValorificata' + key).val()) + 
                                parseFloat(lastYearInStock);
                        value = value + ((parseInt(key) >= 1) ? parseFloat(jQuery('.EGD1CantitateDeseuInStocValorificata' + (parseInt(key) - 1)).text()) : 0);
                        jQuery('.calcul-valorificata').each(function(index){
                            if (index >= parseInt(key)) {
                                jQuery('.EGD1CantitateDeseuInStocValorificata' + index).text(value.toFixed(2));
                            }
                        });
                        jQuery('#EGD1CantitateDeseuInStocTotal').text(value);
                    }
                {% endif %}

                {% if formConfig.operatia == 4 %}
                    jQuery('.lastYearInStock').change(function(){
                        jQuery('.calcul-eliminata').each(function(index){
                            calculEliminata(index);
                        });
                    });
                    {% for key in form.EGD1GenerareDeseuri|keys %}
                        jQuery('.EGD1CantitateDeseuGenerate{{ key }}').change(function(){
                            calculEliminata({{ key }});
                        });
                        jQuery('.EGD1CantitateDeseuEliminata{{ key }}').change(function(){
                            calculEliminata({{ key }});
                        });
                    {% endfor %}
                    function calculEliminata(key) {
                        var lastYearInStock = (key == 0) ? jQuery('.lastYearInStock').val() : 0;
                        var value = parseFloat(jQuery('.EGD1CantitateDeseuGenerate' + key).val()) - 
                                parseFloat(jQuery('.EGD1CantitateDeseuEliminata' + key).val()) + 
                                parseFloat(lastYearInStock);
                        value = value + ((parseInt(key) >= 1) ? parseFloat(jQuery('.EGD1CantitateDeseuInStocEliminata' + (parseInt(key) - 1)).text()) : 0);
                        jQuery('.calcul-eliminata').each(function(index){
                            if (index >= parseInt(key)) {
                                jQuery('.EGD1CantitateDeseuInStocEliminata' + index).text(value);
                            }
                        });
                        jQuery('#EGD1CantitateDeseuInStocTotal').text(value);
                    }  
                {% endif %}
            {% endif %}
                
            {% if flow.getCurrentStepNumber() == ((creditsUsage.isFormConfigFinished) ? 2 : 1) %}
                jQuery('.craue_formflow_button_last').click(function () {
                    if (!jQuery("#company-fields-list li").length) {
                        jQuery('.no-display').show();
                        return false;
                    }
                    else {
                        jQuery('.no-display').hide();
                        jQuery('#company-fields-list li input').each(function () {
                            jQuery(this).rules("add", {
                                required: true,
                                messages: {
                                    required: 'Acest camp este obligatoriu'
                                }
                            });
                        });
                    }
                });
            {% endif %}
            
            jQuery('.craue_formflow_button_last').click(function () {
                var errorNo = 0;
                jQuery(this).parent().parent().prevAll().find('.field-validation-error').each(function () {
                    if (jQuery(this).html() !== '') {
                        errorNo = errorNo + 1;
                    }
                });
                if (errorNo !== 0) {
                    jQuery('#globalErrors').show();
                    return false;
                } else {
                    jQuery('#globalErrors').hide();
                    jQuery('.flash-message').hide();
                }
            });
            
            jQuery('.navtab').click(function () {
                jQuery('.flash-message').hide();
            });
                            
            {#// add autocomplete options for stare_fizica
            $("#egd_step1_stareFizica").autocomplete({
                source: function(req, responseFn) {
                var re = $.ui.autocomplete.escapeRegex(req.term);
                        var matcher = new RegExp("^" + re, "i");
                        var a = $.grep({{ egd.autocomplete.stare_fizica|split(',')|json_encode|raw }}, function(item, index){
                        return matcher.test(item);
                        });
                        responseFn(a);
                }
            });
            
            //add autocomplete options for unitate_masura
            $("#egd_step1_unitateMasura").autocomplete({
                source: function(req, responseFn) {
                var re = $.ui.autocomplete.escapeRegex(req.term);
                    var matcher = new RegExp("^" + re, "i");
                    var a = $.grep({{ egd.autocomplete.unitate_masura|split(',')|json_encode|raw }}, function(item, index){
                    return matcher.test(item);
                    });
                    responseFn(a);
                }
            }); #}
            
            {% if not creditsUsage.isFormConfigFinished %}
                jQuery("#evidenta_gestiunii_deseurilor input, #evidenta_gestiunii_deseurilor select, #evidenta_gestiunii_deseurilor textarea, #evidenta_gestiunii_deseurilor button").each(function(){
                    jQuery(this).prop('disabled', 'true');
                });
            {% endif %}
        });
    </script>

{% endblock %}
