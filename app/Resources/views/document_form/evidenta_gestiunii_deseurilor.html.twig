{% extends "base.html.twig" %}


{% block stylesheets %}
    {{ parent() }}
    {% stylesheets '@CraueFormFlowBundle/Resources/assets/css/buttons.css' %}
        <link type="text/css" rel="stylesheet" href="{{ asset_url }}" />
    {% endstylesheets %}
{% endblock %}
    
{% block modal %}
    {% if flow.getCurrentStepNumber() ==  4 %}
        {% include "document_form/config/confirm_generate_document_modal.html.twig" %}
    {% endif %}
    {% if flow.getCurrentStepNumber() == 3 %}
        {% set formData  = creditsUsage.formularConfig.formData | json_decode %}
        {% include "document_form/config/customize_agent_details_modal.html.twig" with {'agentiEconomici': formData._e_g_d_company } %}
    {% endif %}
{% endblock %}

{% block ccontainer %}
    {% set formConfig  = creditsUsage.formularConfig.formConfig | json_decode %}
    {% set formData  = creditsUsage.formularConfig.formData | json_decode %}

    <h2 class="title">{{ 'Evidenta Gestiunii Deseurilor' | trans }}</h2>

    {% for flash_message in app.session.flashbag.get('form-success') %}
        <h4 class="color-green text-center first flash-message" >{{ flash_message|trans }}</h4>
    {% endfor %}

    {% for flash_message in app.session.flashbag.get('form-error') %}
        <h4 class="color-red text-center first flash-message" >{{ flash_message|trans|raw }}</h4>
    {% endfor %}

    {% for flash_message in app.session.flashbag.get('formular-info') %}
        <h4 class="color-green text-center first flash-message" >{{ flash_message|trans }}</h4>
    {% endfor %}

    <h4 class="color-red text-center first hidden" id="globalErrors"></h4>
    
    {{ render(controller('AppBundle:Formular/EvidentaGestiuniiDeseurilor:getFormularDocumentsShortFormConfigurationText', {'creditUsageId' : creditsUsage.id, 'short' : true })) }}

    <div class="col-xs-2">
        {% include 'CraueFormFlowBundle:FormFlow:stepList.html.twig' %}
    </div>
    <div class="col-xs-10">
        {% form_theme form with 'document_form/base/form_fields.html.twig' %}
        <form class="formular-form" id="evidenta_gestiunii_deseurilor" method="post" {{ form_enctype(form) }}>
            {{ form_errors(form) }}

            {% if flow.getCurrentStepNumber() == 1 %}
                {{ form_row(form.operatia,
                {'attr': {'class': 'operatia max-width-500',
                    'label_info': '<img src="' ~ asset('assets/images/error.png') ~ '"/> ' ~ 'formular-documents.info.egd.operatia1' | trans ~ '<br/>' ~ '<img src="' ~ asset('assets/images/error.png') ~ '"/> ' ~ 'formular-documents.info.egd.operatia2' | trans ~ '<br/>' ~ '<img src="' ~ asset('assets/images/error.png') ~ '"/> ' ~ 'formular-documents.info.egd.operatia3' | trans({'%link_contact%': path('contact') })
                } }) }}
            {% endif %}

            {% if flow.getCurrentStepNumber() == 2 %}
                {{ form_row(form.agentEconomic, 
                    {'attr': {'data-val': 'true',
                    'data-val-required': 'Acest camp este obligatoriu' | trans,
                    'label_info': ('formular-documents.info.egd.agentEconomic' | trans != '') ? '<img src="' ~ asset('assets/images/error.png') ~ '"/> ' ~ 'formular-documents.info.egd.agentEconomic' | trans : "",
                    } } ) }}
                <span class="field-validation-valid" data-valmsg-for="{{ form.agentEconomic.vars.full_name }}" data-valmsg-replace="true" ></span>
                {{ form_row(form.stareFizica, 
                    {'attr': {'class': 'stareFizica max-width-500', 
                    'label_info': ('formular-documents.info.egd.stareFizica' | trans != '') ? '<img src="' ~ asset('assets/images/error.png') ~ '"/> ' ~ 'formular-documents.info.egd.stareFizica' | trans : "",
                 } }) }}
                {{ form_row(form.unitateMasura, 
                    {'attr': {'class': 'unitateMasura max-width-500', 
                    'label_info': ('formular-documents.info.egd.unitateMasura' | trans != '') ? '<img src="' ~ asset('assets/images/error.png') ~ '"/> ' ~ 'formular-documents.info.egd.unitateMasura' | trans : "", 
                 } }) }}
                {{ form_row(form.stocareTip, 
                    { 'label': 'formular-documents.label.egd.stocareTip' | trans,
                    'attr': {'class': 'stocareTip max-width-500', 
                    'label_info': ('formular-documents.info.egd.stocareTip' | trans) ? '<img src="' ~ asset('assets/images/error.png') ~ '"/> ' ~ 'formular-documents.info.egd.stocareTip' | trans : "", 
                 } }) }}
                {{ form_row(form.tratareMod, 
                    { 'label': 'formular-documents.label.egd.tratareMod' | trans,
                    'attr': {'class': 'tratareMod max-width-500', 
                    'label_info': '<img src="' ~ asset('assets/images/error.png') ~ '"/> ' ~ 'formular-documents.info.egd.tratareMod1' | trans ~ '<br/>' ~ '<img src="' ~ asset('assets/images/error.png') ~ '"/> ' ~ 'formular-documents.info.egd.tratareMod2' | trans, 
                 } }) }}
                {{ form_row(form.transportMijloc, 
                    { 'label': 'formular-documents.label.egd.transportMijloc' | trans,
                    'attr': {'class': 'transportMijloc max-width-500', 
                    'label_info': ('formular-documents.info.egd.transportMijloc' | trans) ? '<img src="' ~ asset('assets/images/error.png') ~ '"/> ' ~ 'formular-documents.info.egd.transportMijloc' | trans, 
                 } }) }}
                {{ form_row(form.transportDestinatie, 
                    { 'label': 'formular-documents.label.egd.transportDestinatie' | trans,
                    'attr': {'class': 'transportDestinatia max-width-500', 
                    'label_info': ('formular-documents.info.egd.transportDestinatie' | trans) ? '<img src="' ~ asset('assets/images/error.png') ~ '"/> ' ~ 'formular-documents.info.egd.transportDestinatie' | trans, 
                 } }) }}
                {% if formConfig.operatia is defined and formConfig.operatia == 3 %}
                    {{ form_row(form.operatiaDeValorificare, 
                    {'attr': {'class': 'operatiaDeValorificare max-width-500', 
                    'label_info': '<img src="' ~ asset('assets/images/error.png') ~ '"/> ' ~ 'formular-documents.info.egd.operatiaDeValorificare/Eliminare1' | trans ~ '<br/>' ~ '<img src="' ~ asset('assets/images/error.png') ~ '"/> ' ~ 'formular-documents.info.egd.operatiaDeValorificare/Eliminare2' | trans, 
                 } }) }}
                {% endif %}
                {% if formConfig.operatia is defined and formConfig.operatia == 4 %}
                    {{ form_row(form.operatiaDeEliminare, 
                    {'attr': {'class': 'operatiaDeEliminare max-width-500', 
                    'label_info': 'formular-documents.info.egd.operatiaDeEliminare' | trans, 
                 } }) }}
                {% endif %}
                <label>
                    {% if formConfig.operatia is not defined %}
                        {{ 'Agentul economic care efectueaza operatia de valorificare sau eliminare' | trans }}
                    {% endif %}
                    {% if formConfig.operatia is defined and formConfig.operatia == 3 %}
                        {{ 'Agentul economic care efectueaza operatia de valorificare' | trans }}
                    {% endif %}
                    {% if formConfig.operatia is defined and formConfig.operatia == 4 %}
                        {{ 'Agentul economic care efectueaza operatia de eliminare' | trans }}
                    {% endif %}
                    {{ include('document_form/base/form_label_info.html.twig', {'label_info': '<img src="' ~ asset('assets/images/error.png') ~ '"/> ' ~ 'formular-documents.info.egd.EGDCompany1' | trans ~ '<br/>' ~ '<img src="' ~ asset('assets/images/error.png') ~ '"/> ' ~ 'formular-documents.info.egd.EGDCompany2' | trans }) }} 
                </label>
                <p>{{ 'Va rugam introduceti agentul/agentii economici cu care aveti contract pentru preluarea deseului' | trans }}</p>
                <ul id="company-fields-list" data-prototype="
                    {% filter escape %}
                        {{ include('document_form/base/prototype_company.html.twig', { 'form': form.EGDCompany.vars.prototype }) }}
                    {% endfilter %}">
                    {% for item in form.EGDCompany %}
                        <li>
                            {{ form_row(item.name, 
                                {'attr': {'data-val': 'true',
                                'data-val-required': 'Acest camp este obligatoriu' | trans,
                                } } ) }}
                            <span class="field-validation-valid" data-valmsg-for="{{ form.EGDCompany.vars.full_name }}[{{ loop.index0 }}][name]" data-valmsg-replace="true" ></span>
                        </li>
                    {% endfor %}
                </ul>
                <a href="#" id="add-another-company">{{ 'Adauga o firma' | trans }}</a>
                <div class="color-red no-display" id="#error-no-company">{{ 'Adaugati cel putin 1 firma' | trans }}</div>
                <script type="text/javascript">
                    // keep track of how many company fields have been rendered
                    var companyCount = '{{ form.EGDCompany|length }}';

                    jQuery(document).ready(function() {

                        var companyList = jQuery('#company-fields-list');

                        // add a delete link to all of the existing speaker form li elements
                        companyList.find('li').each(function(index) {
                            addCompanyFormDeleteLink($(this));
                        });

                        jQuery('#add-another-company').click(function(e) {
                            e.preventDefault();
                            jQuery('.no-display').hide();

                            var companyList = jQuery('#company-fields-list');

                            // grab the prototype template
                            var newWidget = companyList.attr('data-prototype');
                            // replace the "__name__" used in the id and name of the prototype
                            // with a number that's unique to your companies
                            newWidget = newWidget.replace(/__name__/g, companyCount);
                            companyCount++;

                            // create a new list element and add it to the list
                            var newLi = jQuery('<li></li>').html(newWidget);
                            newLi.appendTo(companyList);
                            addCompanyFormDeleteLink(newLi);
                            showTooltip(jQuery("input"));
                        });
                    })

                    function addCompanyFormDeleteLink($companyFormLi) {
                        var $removeFormA = $('<a href="#">{{ 'Sterge firma'|trans }}</a>');
                        $companyFormLi.append($removeFormA);

                        $removeFormA.on('click', function(e) {
                            // prevent the link from creating a "#" on the URL
                            e.preventDefault();

                            // remove the li for the company form
                            $companyFormLi.remove();
                        });
                    }
                </script>
            {% endif %}

            {% if flow.getCurrentStepNumber() == 3 %}
                <h3>{{'Generare deseuri' | trans}}
                    {{ include('document_form/base/form_label_info.html.twig', {'label_info': 'formular-documents.info.egd.chapter1' | trans }) }}
                </h3>
                <p>{{ 'In aceasta pagina poti sa introduci cantitatea de deseu generata in coloana Generate si valorificat/eliminate in coloana valorificata/eliminate final.' | trans }}</p>
                <p>{{ 'Daca utilizezi pentru prima data(in primul an) aplicatia, va trebui sa introduci stocul de la sfarsitul anului precedent in campul: Ramas in stoc de anul trecut.' | trans }}</p>
                <p>{{ '<b>Atentie:</b> E important sa utilizezi unitatea de masura pe care ai ales-o in pasii precedent pentru acest deseu' | trans | raw }}</p>
                {{ form_row(form.lastYearInStock, {'label': 'Ramas in stoc de anul trecut (se va adauga in plus la luna Ianuarie)', 'attr': {'class': 'lastYearInStock',
                                'data' : formData.last_year_in_stock,
                                'data-val': 'true',
                                'data-val-required': 'Acest camp este obligatoriu' | trans,
                                'onkeypress': 'return validateFloatKeyPress(this, event);',
                                'onfocus': "if(this.value == '0') {this.value=''} else {this.value = this.value}", 
                                'onblur': "if(this.value == '') {this.value ='0'}",
                                'autocomplete': 'off',
                                'label_info': 'formular-documents.info.egd.lastYearInStock' | trans, 
                                } }) }}
                <span class="field-validation-valid" data-valmsg-for="{{ form.lastYearInStock.vars.full_name }}" data-valmsg-replace="true" ></span>
                <br/>
                <h4 class="color-red text-center first" id="globalAddAgentErrors" hidden="hidden">{{ 'Nu ati precizat agentul economic care efectueaza operatia aleasa!' | trans }}</h4>
                <table class="table-bordered text-center form-table form-table-layout-fixed">
                    <tr>
                        <th class="text-center width-35-px" rowspan="3">{{ 'Nr.' | trans }}</th>
                        <th class="text-center width-105-px" rowspan="3">{{ 'Luna' | trans }}</th>
                        <th class="text-center" colspan="3">{{ 'Cantitatea de deseuri' | trans }}<span> ({{ 'U/M aleasa este ' ~ formData.unitate_masura }})</span></th>
                    </tr>
                    <tr>
                        <th class="text-center" rowspan="2">{{ 'Generate' | trans }}</th>
                        <th class="text-center" colspan="2">{{ 'din care:' | trans }}</th>
                    </tr>
                    <tr>
                        {% if formConfig.operatia == 3 %}
                        <th class="text-center">{{ 'valorificata:' | trans }}</th>
                        {% endif %}
                        {% if formConfig.operatia == 4 %}
                        <th class="text-center">{{ 'eliminata final:' | trans }}</th>
                        {% endif %}
                        <th class="text-center">{{ 'ramasa in stoc:' | trans }}</th>
                    </tr>
                    {% for key,item in form.EGD1GenerareDeseuri %}
                        <tr>
                            <td class="width-35-px">{{ loop.index }}</td>
                            <td class="width-105-px">{{ form_widget(item.luna) }}</td>
                            <td>{{ form_widget(item.cantitateDeseuGenerate, 
                                    {'attr': {'class': 'text-right EGD1CantitateDeseuGenerate EGD1CantitateDeseuGenerate' ~ key, 
                                    'data-val': 'true', 
                                    'onkeypress': 'return validateFloatKeyPress(this, event);',
                                    'tabindex': loop.index0 * 2, 
                                    'autocomplete': 'off', 
                                    'onfocus': "if(this.value == '0') {this.value=''} else {this.value = this.value}", 
                                    'onblur': "if(this.value == '') {this.value ='0'}" 
                                    } } ) 
                                }}
                                <span class="field-validation-valid" data-valmsg-for="{{ item.cantitateDeseuGenerate.vars.full_name }}" data-valmsg-replace="true" ></span>
                            </td>
                            {% set sum = 0 %}
                            {% for agent in formData._e_g_d1_generare_deseuri[key].agent_economic %}
                                {% if agent.cantitate_deseu is defined %}
                                    {% set sum = sum + agent.cantitate_deseu %}
                                {% endif %}
                            {% endfor %}

                            {% if formConfig.operatia == 3 %}
                                {% set valid = true %}                                   
                                {% if sum != formData._e_g_d1_generare_deseuri[key].cantitate_deseu_valorificata %}
                                    {% set valid = false %}
                                {% endif %}
                                <td>{{ form_widget(item.cantitateDeseuValorificata, {'attr': {
                                        'class': 'text-right ' ~ ((formData._e_g_d_company | length > 1) ? "width80 " ~ ((item.cantitateDeseuValorificata.vars.value > 0 and not valid) ? "addAgent-validation-error " : "") : "") ~ 'EGD1CantitateDeseuValorificata EGD1CantitateDeseuValorificata' ~ key, 
                                        'title': (formData._e_g_d_company | length > 1 and item.cantitateDeseuValorificata.vars.value > 0 and not valid) ? 'Foloseste butonul de langa pentru a alege agentul economic' : '',
                                        'data-val': 'true',
                                        'onkeypress': 'return validateFloatKeyPress(this, event);',
                                        'tabindex': loop.index0 * 2 + 1,
                                        'autocomplete': 'off', 
                                        'onfocus': "if(this.value == '0') {this.value=''} else {this.value = this.value}", 
                                        'onblur': "if(this.value == '') {this.value ='0'}; " ~ ((formData._e_g_d_company | length > 1) ? "validateValueValorificata(" ~ key ~ ");" : "") 
                                        } } ) 
                                    }}
                                    <span class="field-validation-valid" data-valmsg-for="{{ item.cantitateDeseuValorificata.vars.full_name }}" data-valmsg-replace="true" ></span>
                                    {% if formData._e_g_d_company | length > 1 %}
                                        <a id="showAddAgentModal{{ key }}" {{ (item.cantitateDeseuValorificata.vars.value > 0) ? "onclick='AddAgentDetails(this.id);' class='activeAddAgent' title='Selecteaza agentul economic'" : 'class="inactiveAddAgent"' }}></a>
                                    {% endif %}
                                </td>
                                <td class="EGD1CantitateDeseuInStocValorificata{{ key }} text-right calcul-valorificata">{{ formTemplateData.EGDTotals.EGD1CantitateDeseuInStocValorificata[key] }}</td>
                            {% endif %}
                            {% if formConfig.operatia == 4 %}                                
                                {% set valid = true %}
                                {% if sum != formData._e_g_d1_generare_deseuri[key].cantitate_deseu_eliminata %}
                                    {% set valid = false %}
                                {% endif %}
                                <td>{{ form_widget(item.cantitateDeseuEliminata, {'attr': {
                                    'class': 'text-right ' ~ ((formData._e_g_d_company | length > 1) ? "width80 " ~ ((item.cantitateDeseuEliminata.vars.value > 0 and not valid) ? "addAgent-validation-error " : "") : "") ~ 'EGD1CantitateDeseuEliminata EGD1CantitateDeseuEliminata' ~ key,
                                    'title': (formData._e_g_d_company | length > 1 and item.cantitateDeseuEliminata.vars.value > 0 and not valid) ? 'Foloseste butonul de langa pentru a alege agentul economic' : '',
                                    'data-val': 'true',
                                    'onkeypress': 'return validateFloatKeyPress(this, event);', 
                                    'tabindex': loop.index0 * 2 + 1, 
                                    'autocomplete': 'off', 
                                    'onfocus': "if(this.value == '0') {this.value=''} else {this.value = this.value}", 
                                    'onblur': "if(this.value == '') {this.value ='0'}; " ~ ((formData._e_g_d_company | length > 1) ? "validateValueEliminata(" ~ key ~");" : "")
                                    } } )  
                                }}
                                    <span class="field-validation-valid" data-valmsg-for="{{ item.cantitateDeseuEliminata.vars.full_name }}" data-valmsg-replace="true" ></span>
                                    {% if formData._e_g_d_company | length > 1 %}
                                        <a id="showAddAgentModal{{ key }}" {{ (item.cantitateDeseuEliminata.vars.value > 0) ? "onclick='AddAgentDetails(this.id);' class='activeAddAgent' title='Selecteaza agentul economic'" : 'class="inactiveAddAgent"' }}></a>
                                    {% endif %}
                                </td>      
                                <td class="EGD1CantitateDeseuInStocEliminata{{ key }} text-right calcul-eliminata">{{ formTemplateData.EGDTotals.EGD1CantitateDeseuInStocEliminata[key] | number_format(2) }}</td>
                            {% endif %}
                        </tr>
                    {% endfor %}
                    <tr>
                        <td class="width-35-px"></td>
                        <td class="width-105-px text-left">{{ 'TOTAL' | trans }}</td>
                        <td id="EGD1CantitateDeseuGenerateTotal" class="text-right">{{ formTemplateData.EGDTotals.EGD1CantitateDeseuGenerateTotal | number_format(2) }}</td>
                        {% if formConfig.operatia == 3 %}
                            <td id="EGD1CantitateDeseuValorificataTotal" class="text-right {{ (formData._e_g_d_company | length > 1) ? "width80" : "" }}">{{ formTemplateData.EGDTotals.EGD1CantitateDeseuValorificataTotal | number_format(2) }}</td>
                        {% endif %}
                        {% if formConfig.operatia == 4 %}
                            <td id="EGD1CantitateDeseuEliminataTotal" class="text-right {{ (formData._e_g_d_company | length > 1) ? "width80" : "" }}">{{ formTemplateData.EGDTotals.EGD1CantitateDeseuEliminataTotal | number_format(2) }}</td>
                        {% endif %}
                        <td id="EGD1CantitateDeseuInStocTotal" class="text-right">{{ formTemplateData.EGDTotals.EGD1CantitateDeseuInStocTotal | number_format(2) }}</td>
                    </tr>
                </table>
                <script type="text/javascript">  
                    function AddAgentDetails(id) {
                        var key = id.replace("showAddAgentModal", "");
                        {% if formConfig.operatia == 3 %}
                            var value = jQuery(".EGD1CantitateDeseuValorificata" + key).val();
                        {% endif %}

                        {% if formConfig.operatia == 4 %}
                            var value = jQuery(".EGD1CantitateDeseuEliminata" + key).val();
                        {% endif %}

                        var text = '{{ 'Suma cantitatilor introduse trebuie sa fie egala cu ' | trans ~ ' %value% (' ~ formData.unitate_masura ~ ')' }}';
                        text = text.replace('%value%', value);
                        jQuery('#customizeAgentDetailsModalTotal').text(text);
                        jQuery('#configTotalSum').val(value);
                        jQuery('#configIndexMonth').val(key);
                        jQuery('#customizeAgentDetailsModalError').addClass("hidden");
                        
                        var formData = null;
                        jQuery.ajax({
                            type: "POST",
                            url: '{{ path('get_agent_quantities') }}',
                            data: { 'creditUsageId': {{ creditsUsage.id }}, 'indexMonth': key },
                            dataType: 'json',
                            success: function (response) {
                                if (response.success) {
                                    {% for agentKey,agent in formData._e_g_d_company %}
                                        jQuery("#agent{{ agentKey }}").val(response.agentsQuantity[{{ agentKey }}]);
                                    {% endfor %} 
                                } else {
                                    jQuery('#globalErrors').text(response.message).removeClass('hidden'); 
                                }
                            }
                        });
                                                
                        jQuery('#customizeAgentDetailsModal').modal();
                    }
                    
                    $('#customizeAgentDetailsModalYes').click(function () {
                        var userSum = 0;
                        var agentsQuantity = new Array();
                        jQuery(".agentValue").each(function() {
                            var agentKey = jQuery(this).attr("id").replace("agent", "");
                            agentsQuantity[agentKey] = parseFloat(jQuery(this).val());
                            userSum = userSum + parseFloat(jQuery(this).val());
                            
                        });
                        if (parseFloat(userSum) === parseFloat(jQuery("#configTotalSum").val())) {
                            var index = parseInt(jQuery("#configIndexMonth").val());
                            $.ajax({
                                type: "POST",
                                url: '{{ path('update_agent_quantities') }}',
                                data: { 'creditUsageId': {{ creditsUsage.id }}, 'indexMonth':  index, 'agentsQuantity' : agentsQuantity },
                                dataType: 'json',
                                success: function (response) {
                                    if (response.success) {
                                        jQuery('#customizeAgentDetailsModal').modal('toggle');
                                        jQuery('#showAddAgentModal' + index).parent().find('input').removeClass('addAgent-validation-error');
                                    } else {
                                        jQuery('#globalErrors').text(response.message).removeClass('hidden'); 
                                    }
                                }
                            });
                            return true;
                        } 
                        
                        jQuery("#customizeAgentDetailsModalError").removeClass("hidden");
                        
                    });
                </script>
            {% endif %}

            <div class="hidden">{{ form_rest(form) }}</div>

            {% include 'document_form/base/form_flow_buttons.html.twig' %}
        </form>
    </div>
    <script type="text/javascript">
        $(".generate").on('click', function(){
            $('#confirmGenerateModal').modal();
            $('#confirmGenerateModalFormId').val('evidenta_gestiunii_deseurilor');
        });
        
        jQuery(document).ready(function () {            
            {% for key in formTemplateData.EGDTotals|keys %}
                var totalClass{{ key}} = '{{ key }}'.replace('Total', '');
                jQuery('.' + totalClass{{ key}}).change(function () {
                    calculTotal(totalClass{{ key}});
                });            
            {% endfor %}
                
            function calculTotal(key) {
                var sum = 0;
                jQuery('.' +  key ).each(function () {
                    if (jQuery(this).val().replace(',', '.').replace(' ', '') !== '') {
                        sum += (parseFloat(jQuery(this).val()) || 0);
                    }
                });
                jQuery('#' + key + 'Total').text(sum.toFixed(2));
            }
                    
            {% if form.EGD1GenerareDeseuri is defined %}
                {% if formConfig.operatia == 3 %}
                    jQuery('.lastYearInStock').change(function(){
                        jQuery('.calcul-valorificata').each(function(index){
                            calculValorificata(index);
                        });
                    });
                    {% for key in form.EGD1GenerareDeseuri|keys %}
                        jQuery('.EGD1CantitateDeseuGenerate{{ key }}').change(function(){
                            calculValorificata({{ key }});
                        });
                        jQuery('.EGD1CantitateDeseuValorificata{{ key }}').change(function(){
                            calculValorificata({{ key }});
                        });
                    {% endfor %}
                    function calculValorificata(key) {
                        jQuery('.calcul-valorificata').each(function(index){
                            if (index >= parseInt(key)) {
                                var lastYearInStock = (index === 0) ? (parseFloat(jQuery('.lastYearInStock').val()) || 0) : 0;
                                var valueG = parseFloat(jQuery('.EGD1CantitateDeseuGenerate' + index).val()) || 0;
                                var valueV = parseFloat(jQuery('.EGD1CantitateDeseuValorificata' + index).val()) || 0;
                                var value = valueG - valueV + lastYearInStock;
                                value = value + ((index >= 1) ? 
                                    parseFloat(jQuery('.EGD1CantitateDeseuInStocValorificata' + (index - 1)).text()) : 0);
                                if (value < 0) {
                                    jQuery('.EGD1CantitateDeseuValorificata' + index).val(0).removeClass("addAgent-validation-error");
                                    jQuery('#showAddAgentModal' + index).removeAttr("onclick").removeAttr("title").removeClass("activeAddAgent").addClass("inactiveAddAgent");
                                    calculValorificata(index);
                                    calculTotal('EGD1CantitateDeseuValorificata');
                                    alert('Stocul existent mai mic decat valoarea introdusa!');
                                    return false;
                                }
                                if (index === 11) {
                                    jQuery('#EGD1CantitateDeseuInStocTotal').text(value.toFixed(2));
                                }
                                jQuery('.EGD1CantitateDeseuInStocValorificata' + index).text(value.toFixed(2));
                            }
                        });
                    }
                {% endif %}

                {% if formConfig.operatia == 4 %}
                    jQuery('.lastYearInStock').change(function(){
                        jQuery('.calcul-eliminata').each(function(index){
                            calculEliminata(index);
                        });
                    });
                    {% for key in form.EGD1GenerareDeseuri|keys %}
                        jQuery('.EGD1CantitateDeseuGenerate{{ key }}').change(function(){
                            calculEliminata({{ key }});
                        });
                        jQuery('.EGD1CantitateDeseuEliminata{{ key }}').change(function(){
                            calculEliminata({{ key }});
                        });
                    {% endfor %}
                    function calculEliminata(key) {
                        jQuery('.calcul-eliminata').each(function(index){
                            var lastYearInStock = (index === 0) ? (parseFloat(jQuery('.lastYearInStock').val()) || 0) : 0;
                            var valueG = parseFloat(jQuery('.EGD1CantitateDeseuGenerate' + index).val()) || 0;
                            var valueE = parseFloat(jQuery('.EGD1CantitateDeseuEliminata' + index).val()) || 0;     
                            var value = valueG - valueE + lastYearInStock;
                            value = value + ((index >= 1) ? 
                                parseFloat(jQuery('.EGD1CantitateDeseuInStocEliminata' + (index - 1)).text()) : 0);
                            if (value < 0) {
                                jQuery('.EGD1CantitateDeseuEliminata' + index).val(0).removeClass("addAgent-validation-error");
                                jQuery('#showAddAgentModal' + index).removeAttr("onclick").removeAttr("title").removeClass("activeAddAgent").addClass("inactiveAddAgent");
                                calculEliminata(index);
                                calculTotal('EGD1CantitateDeseuEliminata');
                                alert('Stocul existent mai mic decat valoarea introdusa!');
                                return false;
                            }
                            if (index === 11) {
                                jQuery('#EGD1CantitateDeseuInStocTotal').text(value.toFixed(2));
                            }
                            if (index >= parseInt(key)) {
                                jQuery('.EGD1CantitateDeseuInStocEliminata' + index).text(value.toFixed(2));
                            }
                        });
                    }  
                {% endif %}
            {% endif %}
                
            {% if flow.getCurrentStepNumber() == 2 %}
                jQuery('.craue_formflow_button_last, .craue_formflow_button_save').click(function () {
                    if (!jQuery("#company-fields-list li").length) {
                        jQuery('.no-display').show();
                        return false;
                    }
                    else {
                        jQuery('.no-display').hide();
                        jQuery('#company-fields-list li input').each(function () {
                            jQuery(this).rules("add", {
                                required: true,
                                messages: {
                                    required: 'Acest camp este obligatoriu'
                                }
                            });
                        });
                    }
                });
            {% endif %}
               
            jQuery('.craue_formflow_button_last, .craue_formflow_button_save').click(function () {
                var errorNoAddAgent = 0;
                jQuery(this).parent().parent().find('.addAgent-validation-error').each(function () {
                    errorNoAddAgent = errorNoAddAgent + 1;
                });
                if (errorNoAddAgent !== 0) {
                    jQuery('#globalAddAgentErrors').show();
                    return false;
                } else {
                    jQuery('#globalAddAgentErrors').hide();
                    jQuery('.flash-message').hide();
                }                
            });
            
            jQuery('.navtab').click(function () {
                jQuery('.flash-message').hide();
            });
                            
            {#// add autocomplete options for stare_fizica
            $("#egd_step1_stareFizica").autocomplete({
                source: function(req, responseFn) {
                var re = $.ui.autocomplete.escapeRegex(req.term);
                        var matcher = new RegExp("^" + re, "i");
                        var a = $.grep({{ egd.autocomplete.stare_fizica|split(',')|json_encode|raw }}, function(item, index){
                        return matcher.test(item);
                        });
                        responseFn(a);
                }
            });
            
            //add autocomplete options for unitate_masura
            $("#egd_step1_unitateMasura").autocomplete({
                source: function(req, responseFn) {
                var re = $.ui.autocomplete.escapeRegex(req.term);
                    var matcher = new RegExp("^" + re, "i");
                    var a = $.grep({{ egd.autocomplete.unitate_masura|split(',')|json_encode|raw }}, function(item, index){
                    return matcher.test(item);
                    });
                    responseFn(a);
                }
            }); #}

        });
    </script>

{% endblock %}
