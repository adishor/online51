{% extends "base.html.twig" %}

{% block stylesheets %}
    {{ parent() }}
    {% stylesheets '@CraueFormFlowBundle/Resources/assets/css/buttons.css' %}
        <link type="text/css" rel="stylesheet" href="{{ asset_url }}" />
    {% endstylesheets %}
{% endblock %}

{% block ccontainer %}
    
    <h2 class="title">{{ 'Decizie Personal cu atributii' | trans }}</h2>

    {% for flash_message in app.session.flashbag.get('form-success') %}
        <h4 class="color-green text-center first flash-message" >{{ flash_message|trans }}</h4>
    {% endfor %}

    {% for flash_message in app.session.flashbag.get('form-error') %}
        <h4 class="color-red text-center first flash-message" >{{ flash_message|trans|raw }}</h4>
    {% endfor %}

    <h4 class="color-red text-center first" id="globalErrors" hidden="hidden">{{ 'Mai aveti erori' | trans }}</h4>

    <div class="col-xs-12">    
        <form class="formular-form" id="decizie_personal_cu_atributii" method="post" {{ form_enctype(form) }}>
            {{ form_errors(form) }}
            
            {{ form_row(form.company) }}
            
            <section>
                <h3>{{ 'Conducatorii locurilor de munca sunt:' | trans }}</h3>
                <ul id="conducatorii-fields-list" data-prototype="
                    {% filter escape %}
                        {{ include('document_form/base/prototype_person.html.twig', { 'form': form.workersLeaders.vars.prototype }) }}
                    {% endfilter %}">
                    {% for item in form.workersLeaders %}
                        <li>
                            <div class="col-xs-1 no-margin-left">
                                {{ form_row(item.gender, 
                                    {'attr': {'data-val': 'true',
                                    'data-val-required': ' ',
                                    } } ) }}
                                <span class="field-validation-valid" data-valmsg-for="{{ form.workersLeaders.vars.full_name }}[{{ loop.index0 }}][gender]" data-valmsg-replace="true" ></span>
                            </div>
                            <div class="col-xs-11">
                                {{ form_row(item.name, 
                                    {'attr': {'data-val': 'true',
                                    'data-val-required': 'Acest camp este obligatoriu' | trans,
                                    } } ) }}
                                <span class="field-validation-valid" data-valmsg-for="{{ form.workersLeaders.vars.full_name }}[{{ loop.index0 }}][name]" data-valmsg-replace="true" ></span>
                            </div>
                            <div class="clear-both"></div>
                        </li>
                    {% endfor %}
                </ul>
                <a class="costum" href="#" id="add-another-conducator">{{ 'Adauga un nou conducator' | trans }}</a>
                <div class="color-red no-display-conducator" id="#error-no-conducator">{{ 'Adaugati cel putin 1 conducator' | trans }}</div>
                <script type="text/javascript">
                    // keep track of how many conducatorii fields have been rendered
                    var conducatoriiCount = '{{ form.workersLeaders|length }}';

                    jQuery(document).ready(function () {

                        var conducatoriiList = jQuery('#conducatorii-fields-list');

                        // add a delete link to all of the existing speaker form li elements
                        conducatoriiList.find('li').each(function (index) {
                            addConducatorFormDeleteLink($(this));
                        });

                        jQuery('#add-another-conducator').click(function (e) {
                            e.preventDefault();
                            jQuery('.no-display-conducator').hide();

                            var conducatoriiList = jQuery('#conducatorii-fields-list');

                            // grab the prototype template
                            var newWidget = conducatoriiList.attr('data-prototype');
                            // replace the "__name__" used in the id and name of the prototype
                            // with a number that's unique to your companies
                            newWidget = newWidget.replace(/__name__/g, conducatoriiCount);
                            conducatoriiCount++;

                            // create a new list element and add it to the list
                            var newLi = jQuery('<li></li>').html(newWidget);
                            newLi.appendTo(conducatoriiList);
                            addConducatorFormDeleteLink(newLi);
                        });
                    });

                    function addConducatorFormDeleteLink($conducatoriiFormLi) {
                        var $removeFormA = $('<a href="#">{{ 'Sterge conducator'|trans }}</a>');
                        $conducatoriiFormLi.append($removeFormA);

                        $removeFormA.on('click', function (e) {
                            // prevent the link from creating a "#" on the URL
                            e.preventDefault();

                            // remove the li for the conducatorii form
                            $conducatoriiFormLi.remove();
                        });
                    }
                </script>
            </section>
                        
            <div class="clear-both"></div>            
            
            <section>
                <h3>{{ 'Urmatorii angajati pot conduce autoturisme in interesul serviciului:' | trans }}</h3>
                <ul id="autoturisme-fields-list" data-prototype="
                    {% filter escape %}
                        {{ include('document_form/base/prototype_person.html.twig', { 'form': form.workersCarsDriven.vars.prototype }) }}
                    {% endfilter %}">
                    {% for item in form.workersCarsDriven %}
                        <li>
                            <div class="col-xs-1 no-margin-left">
                                {{ form_row(item.gender, 
                                    {'attr': {'data-val': 'true',
                                    'data-val-required': ' ',
                                    } } ) }}
                                <span class="field-validation-valid" data-valmsg-for="{{ form.workersCarsDriven.vars.full_name }}[{{ loop.index0 }}][gender]" data-valmsg-replace="true" ></span>
                            </div>
                            <div class="col-xs-11">
                                {{ form_row(item.name, 
                                    {'attr': {'data-val': 'true',
                                    'data-val-required': 'Acest camp este obligatoriu' | trans,
                                    } } ) }}
                                <span class="field-validation-valid" data-valmsg-for="{{ form.workersCarsDriven.vars.full_name }}[{{ loop.index0 }}][name]" data-valmsg-replace="true" ></span>
                            </div>
                            <div class="clear-both"></div>
                        </li>
                    {% endfor %}
                </ul>
                <a class="costum" href="#" id="add-another-autoturism">{{ 'Adauga un nou conducator autoturism' | trans }}</a>
                <div class="color-red no-display-autoturism" id="#error-no-autoturism">{{ 'Adaugati cel putin 1 conducator autoturism' | trans }}</div>
                <script type="text/javascript">
                    // keep track of how many autoturisme fields have been rendered
                    var autoturismeCount = '{{ form.workersCarsDriven|length }}';

                    jQuery(document).ready(function () {

                        var autoturismeList = jQuery('#autoturisme-fields-list');

                        // add a delete link to all of the existing speaker form li elements
                        autoturismeList.find('li').each(function (index) {
                            addAutoturismFormDeleteLink($(this));
                        });

                        jQuery('#add-another-autoturism').click(function (e) {
                            e.preventDefault();
                            jQuery('.no-display-autoturism').hide();

                            var autoturismeList = jQuery('#autoturisme-fields-list');

                            // grab the prototype template
                            var newWidget = autoturismeList.attr('data-prototype');
                            // replace the "__name__" used in the id and name of the prototype
                            // with a number that's unique to your companies
                            newWidget = newWidget.replace(/__name__/g, autoturismeCount);
                            autoturismeCount++;

                            // create a new list element and add it to the list
                            var newLi = jQuery('<li></li>').html(newWidget);
                            newLi.appendTo(autoturismeList);
                            addAutoturismFormDeleteLink(newLi);
                        });
                    });

                    function addAutoturismFormDeleteLink($autoturismeFormLi) {
                        var $removeFormA = $('<a href="#">{{ 'Sterge conducator autoturism'|trans }}</a>');
                        $autoturismeFormLi.append($removeFormA);

                        $removeFormA.on('click', function (e) {
                            // prevent the link from creating a "#" on the URL
                            e.preventDefault();

                            // remove the li for the autoturisme form
                            $autoturismeFormLi.remove();
                        });
                    }
                </script>
            </section>
                        
            <div class="clear-both"></div>
                        
            <section>
                <h3>{{ 'Urmatorii angajati sunt responsabili cu acordarea primului ajutor:' | trans }}</h3>
                <ul id="primAjutor-fields-list" data-prototype="
                    {% filter escape %}
                        {{ include('document_form/base/prototype_person.html.twig', { 'form': form.workersFirstAid.vars.prototype }) }}
                    {% endfilter %}">
                    {% for item in form.workersFirstAid %}
                        <li>
                            <div class="col-xs-1 no-margin-left">
                                {{ form_row(item.gender, 
                                    {'attr': {'data-val': 'true',
                                    'data-val-required': ' ',
                                    } } ) }}
                                <span class="field-validation-valid" data-valmsg-for="{{ form.workersFirstAid.vars.full_name }}[{{ loop.index0 }}][gender]" data-valmsg-replace="true" ></span>
                            </div>
                            <div class="col-xs-11">
                                {{ form_row(item.name, 
                                    {'attr': {'data-val': 'true',
                                    'data-val-required': 'Acest camp este obligatoriu' | trans,
                                    } } ) }}
                                <span class="field-validation-valid" data-valmsg-for="{{ form.workersFirstAid.vars.full_name }}[{{ loop.index0 }}][name]" data-valmsg-replace="true" ></span>
                            </div>
                            <div class="clear-both"></div>
                        </li>
                    {% endfor %}
                </ul>
                <a class="costum" href="#" id="add-another-primAjutor">{{ 'Adauga un nou angajat responsabil cu acordarea primului ajutor' | trans }}</a>
                <div class="color-red no-display-primAjutor" id="#error-no-primAjutor">{{ 'Adaugati cel putin 1 angajat responsabil cu acordarea primului ajutor' | trans }}</div>
                <script type="text/javascript">
                    // keep track of how many primAjutor fields have been rendered
                    var primAjutorCount = '{{ form.workersFirstAid|length }}';

                    jQuery(document).ready(function () {

                        var primAjutorList = jQuery('#primAjutor-fields-list');

                        // add a delete link to all of the existing speaker form li elements
                        primAjutorList.find('li').each(function (index) {
                            addPrimAjutorFormDeleteLink($(this));
                        });

                        jQuery('#add-another-primAjutor').click(function (e) {
                            e.preventDefault();
                            jQuery('.no-display-primAjutor').hide();

                            var primAjutorList = jQuery('#primAjutor-fields-list');

                            // grab the prototype template
                            var newWidget = primAjutorList.attr('data-prototype');
                            // replace the "__name__" used in the id and name of the prototype
                            // with a number that's unique to your companies
                            newWidget = newWidget.replace(/__name__/g, primAjutorCount);
                            primAjutorCount++;

                            // create a new list element and add it to the list
                            var newLi = jQuery('<li></li>').html(newWidget);
                            newLi.appendTo(primAjutorList);
                            addPrimAjutorFormDeleteLink(newLi);
                        });
                    });

                    function addPrimAjutorFormDeleteLink($primAjutorFormLi) {
                        var $removeFormA = $('<a href="#">{{ 'Sterge angajat ce acorda prim ajutor'|trans }}</a>');
                        $primAjutorFormLi.append($removeFormA);

                        $removeFormA.on('click', function (e) {
                            // prevent the link from creating a "#" on the URL
                            e.preventDefault();

                            // remove the li for the primAjutor form
                            $primAjutorFormLi.remove();
                        });
                    }
                </script>
            </section>
                        
            <div class="clear-both"></div>
            
            <section>
                <h3>{{ 'Urmatorii angajati sunt responsabili cu:' | trans }}</h3>
                {% for item in form.workersResponsible %}
                    <div class="col-xs-1 no-margin-left">{{ form_row(item.gender) }}</div>
                    <div class="col-xs-11">{{ form_row(item.name) }} {{ item.function.vars.value | trans }}</div>
                    <div class="clear-both"></div>
                {% endfor %}
            </section>
            
            <div class="hidden">{{ form_rest(form) }}</div>

            <div class="craue_formflow_buttons">
                <button type="button" onclick="onDeciziePersonalCuAtributiiSubmit();" class="craue_formflow_button_last">
                    {{- 'button.finish' | trans({}, 'CraueFormFlowBundle') -}}
                </button>
                <button type="submit" name="btnSave" class="cancel" formnovalidate="formnovalidate">
                    {{- 'button.save' | trans({}, 'CraueFormFlowBundle') -}}
                </button>
            </div>
        </form>
    </div>
                    
    <script type="text/javascript">
        function onDeciziePersonalCuAtributiiSubmit() {
            if (!jQuery("#conducatorii-fields-list li").length) {
                jQuery('.no-display-conducator').show();
                return false;
            }
            else {
                jQuery('.no-display-conducator').hide();
                jQuery('#conducatorii-fields-list li input').each(function () {
                    jQuery(this).rules("add", {
                        required: true,
                        messages: {
                            required: 'Acest camp este obligatoriu'
                        }
                    });
                });
                jQuery('#conducatorii-fields-list li select').each(function () {
                    jQuery(this).rules("add", {
                        required: true
                    });
                });
            }
            
            if (!jQuery("#autoturisme-fields-list li input").length) {
                jQuery('.no-display-autoturism').show();
                return false;
            }
            else {
                jQuery('.no-display-autoturism').hide();
                jQuery('#autoturisme-fields-list li input').each(function () {
                    jQuery(this).rules("add", {
                        required: true,
                        messages: {
                            required: 'Acest camp este obligatoriu'
                        }
                    });
                });
                jQuery('#autoturisme-fields-list li select').each(function () {
                    jQuery(this).rules("add", {
                        required: true
                    });
                });
            }
            
            if (!jQuery("#primAjutor-fields-list li input").length) {
                jQuery('.no-display-primAjutor').show();
                return false;
            }
            else {
                jQuery('.no-display-primAjutor').hide();
                jQuery('#primAjutor-fields-list li input').each(function () {
                    jQuery(this).rules("add", {
                        required: true,
                        messages: {
                            required: 'Acest camp este obligatoriu'
                        }
                    });
                });
                jQuery('#primAjutor-fields-list li select').each(function () {
                    jQuery(this).rules("add", {
                        required: true
                    });
                });
            }
            
            jQuery('#decizie_personal_cu_atributii').submit();
        }
    </script>
{% endblock %}
