# To get started with security, check out the documentation:
# http://symfony.com/doc/current/book/security.html
security:

    role_hierarchy:
        ROLE_SONATA_APP:
            - ROLE_ADMIN_SUBSCRIPTION_LIST
            - ROLE_ADMIN_SUBSCRIPTION_VIEW
            - ROLE_ADMIN_SUBSCRIPTION_CREATE
            - ROLE_ADMIN_SUBSCRIPTION_EDIT
            - ROLE_ADMIN_SUBSCRIPTION_DELETE
            - ROLE_ADMIN_SUBSCRIPTION_EXPORT
            - ROLE_ADMIN_DOMAIN_LIST
            - ROLE_ADMIN_DOMAIN_VIEW
            - ROLE_ADMIN_DOMAIN_CREATE
            - ROLE_ADMIN_DOMAIN_EDIT
            - ROLE_ADMIN_DOMAIN_DELETE
            - ROLE_ADMIN_DOMAIN_EXPORT
            - ROLE_ADMIN_SUBDOMAIN_LIST
            - ROLE_ADMIN_SUBDOMAIN_VIEW
            - ROLE_ADMIN_SUBDOMAIN_CREATE
            - ROLE_ADMIN_SUBDOMAIN_EDIT
            - ROLE_ADMIN_SUBDOMAIN_DELETE
            - ROLE_ADMIN_SUBDOMAIN_EXPORT
            - ROLE_ADMIN_ORDER_LIST
            - ROLE_ADMIN_ORDER_VIEW
            - ROLE_ADMIN_ORDER_CREATE
            - ROLE_ADMIN_ORDER_EDIT
            - ROLE_ADMIN_ORDER_DELETE
            - ROLE_ADMIN_ORDER_EXPORT
            - ROLE_ADMIN_AD_LIST
            - ROLE_ADMIN_AD_VIEW
            - ROLE_ADMIN_AD_CREATE
            - ROLE_ADMIN_AD_EDIT
            - ROLE_ADMIN_AD_DELETE
            - ROLE_ADMIN_AD_EXPORT
            - ROLE_SONATA_USER_ADMIN_USER_LIST
            - ROLE_SONATA_USER_ADMIN_USER_VIEW
            - ROLE_SONATA_USER_ADMIN_USER_CREATE
            - ROLE_SONATA_USER_ADMIN_USER_EDIT
            - ROLE_SONATA_USER_ADMIN_USER_DELETE
            - ROLE_SONATA_USER_ADMIN_USER_EXPORT
            - ROLE_SONATA_USER_ADMIN_GROUP_LIST
            - ROLE_SONATA_USER_ADMIN_GROUP_VIEW
            - ROLE_SONATA_USER_ADMIN_GROUP_CREATE
            - ROLE_SONATA_USER_ADMIN_GROUP_EDIT
            - ROLE_SONATA_USER_ADMIN_GROUP_DELETE
            - ROLE_SONATA_USER_ADMIN_GROUP_EXPORT
            - ROLE_SONATA_MEDIA_ADMIN_MEDIA_LIST
            - ROLE_SONATA_MEDIA_ADMIN_MEDIA_VIEW
            - ROLE_SONATA_MEDIA_ADMIN_MEDIA_CREATE
            - ROLE_SONATA_MEDIA_ADMIN_MEDIA_EDIT
            - ROLE_SONATA_MEDIA_ADMIN_MEDIA_DELETE
            - ROLE_SONATA_MEDIA_ADMIN_MEDIA_EXPORT
            - ROLE_ADMIN_CREDITSUSAGE_LIST
            - ROLE_ADMIN_CREDITSUSAGE_VIEW
        ROLE_ADMIN:       [ROLE_USER, ROLE_SONATA_ADMIN, ROLE_SONATA_APP]
        ROLE_SUPER_ADMIN: [ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]

    access_decision_manager:
        strategy: unanimous

    encoders:
        FOS\UserBundle\Model\UserInterface: sha512

    # http://symfony.com/doc/current/book/security.html#where-do-users-come-from-user-providers
    providers:
        in_memory:
            memory: ~
        fos_userbundle:
            id: fos_user.user_provider.username_email

    firewalls:
        # disables authentication for assets and the profiler, adapt it according to your needs
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        # -> custom firewall for the admin area of the URL
        admin:
            pattern:            /admin(.*)
            context:            user
            form_login:
                provider:       fos_userbundle
                login_path:     /admin/login
                use_forward:    false
                check_path:     /admin/login_check
                failure_path:   null
            logout:
                path:           /admin/logout
                target:         /admin/login
            anonymous:          true

        main:
            pattern:             .*
            context:             user
            form_login:
                provider:       fos_userbundle
                login_path:     /login
                use_forward:    false
                check_path:     /login_check
                failure_path:   null
                success_handler: app.security.authentication_handler
                failure_handler: app.security.authentication_handler
            logout:             true
            anonymous:          true

            # http_basic: ~
            # http://symfony.com/doc/current/book/security.html#a-configuring-how-your-users-will-authenticate

            # form_login: ~
            # http://symfony.com/doc/current/cookbook/security/form_login_setup.html

    access_control:
        - { path: ^/change/.*, roles: [ROLE_USER] }
        - { path: ^/information/.*, roles: [ROLE_USER] }
        # URL of FOSUserBundle which need to be available to anonymous users
        - { path: ^/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/register, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY }

        # Admin login page needs to be accessed without credential
        - { path: ^/admin/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/logout$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/login_check$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY }

        # Secured part of the site
        # This config requires being logged for the whole site and having the admin role for the admin part.
        # Change these rules to adapt them to your needs
        - { path: ^/admin/, roles: [ROLE_SONATA_ADMIN] }
        - { path: ^/.*, role: IS_AUTHENTICATED_ANONYMOUSLY }

